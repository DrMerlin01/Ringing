

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 16 18:53:08 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0006                     _PORTBbits	set	6
   108  0008                     _PORTDbits	set	8
   109  0008                     _PORTD	set	8
   110  0006                     _PORTB	set	6
   111  0088                     _TRISD	set	136
   112  0086                     _TRISB	set	134
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  07FA                     start_initialization:	
   118  07FA                     __initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   122  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   123  07FC                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  07FC                     __end_of__initialization:	
   127  07FC  0183               	clrf	3
   128  07FD  120A  118A  2F97   	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMMON
   131  0070                     __pbssCOMMON:	
   132  0070                     _n:	
   133  0070                     	ds	2
   134                           
   135                           	psect	cstackCOMMON
   136  0072                     __pcstackCOMMON:	
   137  0072                     ?_reset:	
   138  0072                     ??_reset:	
   139                           ; 1 bytes @ 0x0
   140                           
   141  0072                     ?_RButton:	
   142                           ; 1 bytes @ 0x0
   143                           
   144  0072                     ??_RButton:	
   145                           ; 1 bytes @ 0x0
   146                           
   147  0072                     ?_LButton:	
   148                           ; 1 bytes @ 0x0
   149                           
   150  0072                     ??_LButton:	
   151                           ; 1 bytes @ 0x0
   152                           
   153  0072                     ?_main:	
   154                           ; 1 bytes @ 0x0
   155                           
   156                           
   157                           ; 2 bytes @ 0x0
   158  0072                     	ds	2
   159  0074                     ??_main:	
   160                           
   161                           	psect	maintext
   162  0797                     __pmaintext:	
   163                           ; 1 bytes @ 0x2
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 67 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  2   42[None  ] int 
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : B00/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   183 ;;      Params:         0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0
   185 ;;      Temps:          0       0       0       0       0
   186 ;;      Totals:         0       0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels required when called:    2
   189 ;; This function calls:
   190 ;;		_LButton
   191 ;;		_RButton
   192 ;;		_reset
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           
   199                           ;psect for function _main
   200  0797                     _main:	
   201                           
   202                           ;main.c: 69: reset();
   203                           
   204                           ;incstack = 0
   205                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   206  0797  120A  118A  2788  120A  118A  	fcall	_reset
   207  079C                     l548:	
   208                           ;main.c: 70: while(1){
   209                           
   210                           
   211                           ;main.c: 71: RButton();
   212  079C  120A  118A  27C0  120A  118A  	fcall	_RButton
   213                           
   214                           ;main.c: 72: LButton();
   215  07A1  120A  118A  27A7  120A  118A  	fcall	_LButton
   216  07A6  2F9C               	goto	l548
   217  07A7                     __end_of_main:	
   218                           
   219                           	psect	text1
   220  07C0                     __ptext1:	
   221 ;; *************** function _RButton *****************
   222 ;; Defined at:
   223 ;;		line 22 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, btemp+1
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          2       0       0       0       0
   240 ;;      Totals:         2       0       0       0       0
   241 ;;Total ram usage:        2 bytes
   242 ;; Hardware stack levels used:    1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           
   251                           ;psect for function _RButton
   252  07C0                     _RButton:	
   253                           
   254                           ;main.c: 24: _delay((unsigned long)((10)*(4000000/4000.0)));
   255                           
   256                           ;incstack = 0
   257                           ; Regs used in _RButton: [wreg+status,2+status,0+btemp+1]
   258  07C0  300D               	movlw	13
   259  07C1  00F3               	movwf	??_RButton+1
   260  07C2  30FB               	movlw	251
   261  07C3  00F2               	movwf	??_RButton
   262  07C4                     u107:	
   263  07C4  0BF2               	decfsz	??_RButton,f
   264  07C5  2FC4               	goto	u107
   265  07C6  0BF3               	decfsz	??_RButton+1,f
   266  07C7  2FC4               	goto	u107
   267  07C8  2FC9               	nop2
   268                           
   269                           ;main.c: 26: if(PORTDbits.RD0==0)
   270  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   271  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   272  07CB  1808               	btfsc	8,0	;volatile
   273  07CC  0008               	return
   274                           
   275                           ;main.c: 27: {
   276                           ;main.c: 28: n++;
   277  07CD  3001               	movlw	1
   278  07CE  07F0               	addwf	_n,f
   279  07CF  1803               	skipnc
   280  07D0  0AF1               	incf	_n+1,f
   281  07D1  3000               	movlw	0
   282  07D2  07F1               	addwf	_n+1,f
   283                           
   284                           ;main.c: 29: if (n==1)
   285  07D3  0370               	decf	_n,w
   286  07D4  0471               	iorwf	_n+1,w
   287  07D5  1903               	btfsc	3,2
   288                           
   289                           ;main.c: 30: {
   290                           ;main.c: 31: PORTBbits.RB0=1;
   291  07D6  1406               	bsf	6,0	;volatile
   292                           
   293                           ;main.c: 32: }
   294                           ;main.c: 33: if (n==2)
   295  07D7  3002               	movlw	2
   296  07D8  0670               	xorwf	_n,w
   297  07D9  0471               	iorwf	_n+1,w
   298  07DA  1903               	btfsc	3,2
   299                           
   300                           ;main.c: 34: {
   301                           ;main.c: 35: PORTBbits.RB1=1;
   302  07DB  1486               	bsf	6,1	;volatile
   303                           
   304                           ;main.c: 36: }
   305                           ;main.c: 37: if (n==3)
   306  07DC  3003               	movlw	3
   307  07DD  0670               	xorwf	_n,w
   308  07DE  0471               	iorwf	_n+1,w
   309  07DF  1903               	btfsc	3,2
   310                           
   311                           ;main.c: 38: {
   312                           ;main.c: 39: PORTBbits.RB2=1;
   313  07E0  1506               	bsf	6,2	;volatile
   314                           
   315                           ;main.c: 40: }
   316                           ;main.c: 41: if (n==4)
   317  07E1  3004               	movlw	4
   318  07E2  0670               	xorwf	_n,w
   319  07E3  0471               	iorwf	_n+1,w
   320  07E4  1903               	btfsc	3,2
   321                           
   322                           ;main.c: 42: {
   323                           ;main.c: 43: PORTBbits.RB3=1;
   324  07E5  1586               	bsf	6,3	;volatile
   325                           
   326                           ;main.c: 44: }
   327                           ;main.c: 45: if (n>4)
   328  07E6  0871               	movf	_n+1,w
   329  07E7  3A80               	xorlw	128
   330  07E8  00FF               	movwf	127
   331  07E9  3080               	movlw	128
   332  07EA  027F               	subwf	127,w
   333  07EB  1D03               	skipz
   334  07EC  2FEF               	goto	u65
   335  07ED  3005               	movlw	5
   336  07EE  0270               	subwf	_n,w
   337  07EF                     u65:	
   338  07EF  1C03               	skipc
   339  07F0  2FF5               	goto	l28
   340                           
   341                           ;main.c: 46: {
   342                           ;main.c: 47: PORTB=0xFF;
   343  07F1  30FF               	movlw	255
   344  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   345  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   346  07F4  0086               	movwf	6	;volatile
   347  07F5                     l28:	
   348                           ;main.c: 48: }
   349                           ;main.c: 49: while(PORTDbits.RD0==0){};
   350                           
   351  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   352  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   353  07F7  1808               	btfsc	8,0	;volatile
   354  07F8  0008               	return
   355  07F9  2FF5               	goto	l28
   356  07FA                     __end_of_RButton:	
   357                           ;main.c: 50: }
   358                           ;main.c: 51: return;
   359                           
   360                           
   361                           	psect	text2
   362  07A7                     __ptext2:	
   363 ;; *************** function _LButton *****************
   364 ;; Defined at:
   365 ;;		line 54 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          2       0       0       0       0
   382 ;;      Totals:         2       0       0       0       0
   383 ;;Total ram usage:        2 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; Hardware stack levels required when called:    1
   386 ;; This function calls:
   387 ;;		_reset
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _LButton
   395  07A7                     _LButton:	
   396                           
   397                           ;main.c: 56: _delay((unsigned long)((10)*(4000000/4000.0)));
   398                           
   399                           ;incstack = 0
   400                           ; Regs used in _LButton: [wreg+status,2+status,0+pclath+cstack]
   401  07A7  300D               	movlw	13
   402  07A8  00F3               	movwf	??_LButton+1
   403  07A9  30FB               	movlw	251
   404  07AA  00F2               	movwf	??_LButton
   405  07AB                     u117:	
   406  07AB  0BF2               	decfsz	??_LButton,f
   407  07AC  2FAB               	goto	u117
   408  07AD  0BF3               	decfsz	??_LButton+1,f
   409  07AE  2FAB               	goto	u117
   410  07AF  2FB0               	nop2
   411                           
   412                           ;main.c: 58: if(PORTDbits.RD1==1)
   413  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   414  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   415  07B2  1C88               	btfss	8,1	;volatile
   416  07B3  0008               	return
   417                           
   418                           ;main.c: 59: {
   419                           ;main.c: 60: n=0;
   420  07B4  01F0               	clrf	_n
   421  07B5  01F1               	clrf	_n+1
   422                           
   423                           ;main.c: 61: reset();
   424  07B6  120A  118A  2788  120A  118A  	fcall	_reset
   425  07BB                     l35:	
   426                           ;main.c: 62: while (PORTDbits.RD1==1){};
   427                           
   428  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   429  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   430  07BD  1C88               	btfss	8,1	;volatile
   431  07BE  0008               	return
   432  07BF  2FBB               	goto	l35
   433  07C0                     __end_of_LButton:	
   434                           ;main.c: 63: }
   435                           ;main.c: 64: return;
   436                           
   437                           
   438                           	psect	text3
   439  0788                     __ptext3:	
   440 ;; *************** function _reset *****************
   441 ;; Defined at:
   442 ;;		line 14 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_LButton
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _reset
   472  0788                     _reset:	
   473                           
   474                           ;main.c: 16: TRISB=0b00000000;
   475                           
   476                           ;incstack = 0
   477                           ; Regs used in _reset: [wreg+status,2]
   478  0788  1683               	bsf	3,5	;RP0=1, select bank1
   479  0789  1303               	bcf	3,6	;RP1=0, select bank1
   480  078A  0186               	clrf	6	;volatile
   481                           
   482                           ;main.c: 17: PORTB=0b00000000;
   483  078B  1283               	bcf	3,5	;RP0=0, select bank0
   484  078C  1303               	bcf	3,6	;RP1=0, select bank0
   485  078D  0186               	clrf	6	;volatile
   486                           
   487                           ;main.c: 18: TRISD=0b00000011;
   488  078E  3003               	movlw	3
   489  078F  1683               	bsf	3,5	;RP0=1, select bank1
   490  0790  1303               	bcf	3,6	;RP1=0, select bank1
   491  0791  0088               	movwf	8	;volatile
   492                           
   493                           ;main.c: 19: PORTD=0x0F;
   494  0792  300F               	movlw	15
   495  0793  1283               	bcf	3,5	;RP0=0, select bank0
   496  0794  1303               	bcf	3,6	;RP1=0, select bank0
   497  0795  0088               	movwf	8	;volatile
   498  0796  0008               	return
   499  0797                     __end_of_reset:	
   500  007E                     btemp	set	126	;btemp
   501  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LButton
    _main->_RButton

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _LButton
                            _RButton
                              _reset
 ---------------------------------------------------------------------------------
 (1) _RButton                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LButton                                              2     2      0       0
                                              0 COMMON     2     2      0
                              _reset
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LButton
     _reset
   _RButton
   _reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 16 18:53:08 2018

                      _n 0070              __CFG_CP$OFF 0000                       l35 07BB  
                     l28 07F5                       u65 07EF              __CFG_LVP$ON 0000  
                    l548 079C                      u107 07C4                      u117 07AB  
           __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000             __CFG_WRT$OFF 0000  
                   _main 0797                     btemp 007E            __CFG_BOREN$ON 0000  
        __end_of_LButton 07C0                     start 0000          __end_of_RButton 07FA  
                  ?_main 0072            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _reset 0788                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07A7  
                 ??_main 0074                   ?_reset 0072                ??_LButton 0072  
              ??_RButton 0072  __end_of__initialization 07FC           __pcstackCOMMON 0072  
          __end_of_reset 0797                  ??_reset 0072               __pmaintext 0797  
                _LButton 07A7                  _RButton 07C0                  __ptext1 07C0  
                __ptext2 07A7                  __ptext3 0788     end_of_initialization 07FC  
              _PORTBbits 0006                _PORTDbits 0008      start_initialization 07FA  
            __pbssCOMMON 0070                ___latbits 0002                 ?_LButton 0072  
               ?_RButton 0072           __size_of_reset 000F         __size_of_LButton 0019  
       __size_of_RButton 003A            __size_of_main 0010  
