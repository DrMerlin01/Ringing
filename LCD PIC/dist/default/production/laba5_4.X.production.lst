

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 05 22:53:00 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181                           
   182                           	psect	idataBANK1
   183  0746                     __pidataBANK1:	
   184                           
   185                           ;initializer for ___cgram
   186  0746  340C               	retlw	12
   187  0747  3412               	retlw	18
   188  0748  3412               	retlw	18
   189  0749  340C               	retlw	12
   190  074A  3400               	retlw	0
   191  074B  3400               	retlw	0
   192  074C  3400               	retlw	0
   193  074D  3400               	retlw	0
   194  074E  3400               	retlw	0
   195  074F  3404               	retlw	4
   196  0750  340E               	retlw	14
   197  0751  341F               	retlw	31
   198  0752  340E               	retlw	14
   199  0753  3404               	retlw	4
   200  0754  3400               	retlw	0
   201  0755  3400               	retlw	0
   202  0756  3404               	retlw	4
   203  0757  3404               	retlw	4
   204  0758  3404               	retlw	4
   205  0759  3404               	retlw	4
   206  075A  341F               	retlw	31
   207  075B  340E               	retlw	14
   208  075C  3404               	retlw	4
   209  075D  3400               	retlw	0
   210  075E  340A               	retlw	10
   211  075F  3415               	retlw	21
   212  0760  3411               	retlw	17
   213  0761  340A               	retlw	10
   214  0762  3404               	retlw	4
   215  0763  3400               	retlw	0
   216  0764  3400               	retlw	0
   217  0765  3400               	retlw	0
   218  0766  340A               	retlw	10
   219  0767  341F               	retlw	31
   220  0768  341F               	retlw	31
   221  0769  340E               	retlw	14
   222  076A  3404               	retlw	4
   223  076B  3400               	retlw	0
   224  076C  3400               	retlw	0
   225  076D  3400               	retlw	0
   226  076E  3400               	retlw	0
   227  076F  3400               	retlw	0
   228  0770  3400               	retlw	0
   229  0771  3400               	retlw	0
   230  0772  3400               	retlw	0
   231  0773  3400               	retlw	0
   232  0774  3400               	retlw	0
   233  0775  3400               	retlw	0
   234  0776  3400               	retlw	0
   235  0777  3400               	retlw	0
   236  0778  3400               	retlw	0
   237  0779  3400               	retlw	0
   238  077A  3400               	retlw	0
   239  077B  3400               	retlw	0
   240  077C  3400               	retlw	0
   241  077D  3400               	retlw	0
   242  077E  3400               	retlw	0
   243  077F  3400               	retlw	0
   244  0780  3400               	retlw	0
   245  0781  3400               	retlw	0
   246  0782  3400               	retlw	0
   247  0783  3400               	retlw	0
   248  0784  3400               	retlw	0
   249  0785  3400               	retlw	0
   250  000E                     _TMR1	set	14
   251  0006                     _PORTB	set	6
   252  0011                     _TMR2	set	17
   253  0006                     _PORTBbits	set	6
   254  0001                     _TMR0	set	1
   255  0008                     _PORTD	set	8
   256  0090                     _T2CKPS0	set	144
   257  0091                     _T2CKPS1	set	145
   258  0092                     _TMR2ON	set	146
   259  0084                     _T1CKPS0	set	132
   260  0085                     _T1CKPS1	set	133
   261  0081                     _TMR1CS	set	129
   262  0080                     _TMR1ON	set	128
   263  005D                     _TMR0IE	set	93
   264  005E                     _PEIE	set	94
   265  005F                     _GIE	set	95
   266  0061                     _TMR2IF	set	97
   267  005A                     _T0IF	set	90
   268  0060                     _TMR1IF	set	96
   269  0045                     _RD5	set	69
   270  0046                     _RD6	set	70
   271  0044                     _RD4	set	68
   272  0081                     _OPTION_REG	set	129
   273  0086                     _TRISB	set	134
   274  0088                     _TRISDbits	set	136
   275  0088                     _TRISD	set	136
   276  0461                     _TMR2IE	set	1121
   277  0460                     _TMR1IE	set	1120
   278                           
   279                           	psect	strings
   280  0700                     __pstrings:	
   281  0700                     stringtab:	
   282  0700                     __stringtab:	
   283                           
   284                           ;	String table - string pointers are 1 byte each
   285  0700  1BFF               	btfsc	btemp+1,7
   286  0701  2F0A               	ljmp	stringcode
   287  0702  1383               	bcf	3,7
   288  0703  187F               	btfsc	btemp+1,0
   289  0704  1783               	bsf	3,7
   290  0705  0800               	movf	0,w
   291  0706  0A84               	incf	4,f
   292  0707  1903               	skipnz
   293  0708  0AFF               	incf	btemp+1,f
   294  0709  0008               	return
   295  070A                     stringcode:	
   296  070A                     stringdir:	
   297  070A  3007               	movlw	high stringdir
   298  070B  008A               	movwf	10
   299  070C  0804               	movf	4,w
   300  070D  0A84               	incf	4,f
   301  070E  0782               	addwf	2,f
   302  070F                     __stringbase:	
   303  070F  3400               	retlw	0
   304  0710                     __end_of__stringtab:	
   305  0710                     STR_14:	
   306  0710  3453               	retlw	83	;'S'
   307  0711  3461               	retlw	97	;'a'
   308  0712  3476               	retlw	118	;'v'
   309  0713  3469               	retlw	105	;'i'
   310  0714  346E               	retlw	110	;'n'
   311  0715  346B               	retlw	107	;'k'
   312  0716  346F               	retlw	111	;'o'
   313  0717  3476               	retlw	118	;'v'
   314  0718  3400               	retlw	0
   315  0719                     STR_13:	
   316  0719  344B               	retlw	75	;'K'
   317  071A  346F               	retlw	111	;'o'
   318  071B  347A               	retlw	122	;'z'
   319  071C  346C               	retlw	108	;'l'
   320  071D  346F               	retlw	111	;'o'
   321  071E  3476               	retlw	118	;'v'
   322  071F  3461               	retlw	97	;'a'
   323  0720  3400               	retlw	0
   324  0721                     STR_12:	
   325  0721  344B               	retlw	75	;'K'
   326  0722  3468               	retlw	104	;'h'
   327  0723  346C               	retlw	108	;'l'
   328  0724  3479               	retlw	121	;'y'
   329  0725  347A               	retlw	122	;'z'
   330  0726  346F               	retlw	111	;'o'
   331  0727  3476               	retlw	118	;'v'
   332  0728  3400               	retlw	0
   333  0729                     STR_11:	
   334  0729  344B               	retlw	75	;'K'
   335  072A  3472               	retlw	114	;'r'
   336  072B  3469               	retlw	105	;'i'
   337  072C  3467               	retlw	103	;'g'
   338  072D  3465               	retlw	101	;'e'
   339  072E  3472               	retlw	114	;'r'
   340  072F  3400               	retlw	0
   341  0730                     STR_1:	
   342  0730  3430               	retlw	48	;'0'
   343  0731  3400               	retlw	0
   344  0732                     STR_2:	
   345  0732  3431               	retlw	49	;'1'
   346  0733  3400               	retlw	0
   347  0734                     STR_3:	
   348  0734  3432               	retlw	50	;'2'
   349  0735  3400               	retlw	0
   350  0736                     STR_4:	
   351  0736  3433               	retlw	51	;'3'
   352  0737  3400               	retlw	0
   353  0738                     STR_5:	
   354  0738  3434               	retlw	52	;'4'
   355  0739  3400               	retlw	0
   356  073A                     STR_6:	
   357  073A  3435               	retlw	53	;'5'
   358  073B  3400               	retlw	0
   359  073C                     STR_7:	
   360  073C  3436               	retlw	54	;'6'
   361  073D  3400               	retlw	0
   362  073E                     STR_8:	
   363  073E  3437               	retlw	55	;'7'
   364  073F  3400               	retlw	0
   365  0740                     STR_9:	
   366  0740  3438               	retlw	56	;'8'
   367  0741  3400               	retlw	0
   368  0742                     STR_10:	
   369  0742  3439               	retlw	57	;'9'
   370  0743  3400               	retlw	0
   371  0744                     STR_15:	
   372  0744  343A               	retlw	58	;':'
   373  0745  3400               	retlw	0
   374  0744                     
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  0015                     start_initialization:	
   379  0015                     __initialization:	
   380                           
   381                           ; Initialize objects allocated to BANK1
   382  0015  1383               	bcf	3,7	;select IRP bank0
   383  0016  30E0               	movlw	low (__pdataBANK1+64)
   384  0017  00FD               	movwf	btemp+-1
   385  0018  3007               	movlw	high __pidataBANK1
   386  0019  00FE               	movwf	btemp
   387  001A  3046               	movlw	low __pidataBANK1
   388  001B  00FF               	movwf	btemp+1
   389  001C  30A0               	movlw	low __pdataBANK1
   390  001D  0084               	movwf	4
   391  001E  120A  118A  27EE  120A  118A  	fcall	init_ram0
   392                           
   393                           ; Clear objects allocated to BANK0
   394  0023  3037               	movlw	low __pbssBANK0
   395  0024  0084               	movwf	4
   396  0025  304C               	movlw	low (__pbssBANK0+21)
   397  0026  120A  118A  26BD   	fcall	clear_ram0
   398                           
   399                           ; Clear objects allocated to COMMON
   400  0029  01F8               	clrf	__pbssCOMMON& (0+127)
   401  002A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   402  002B                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  002B                     __end_of__initialization:	
   406  002B  0183               	clrf	3
   407  002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0078                     __pbssCOMMON:	
   411  0078                     _count:	
   412  0078                     	ds	2
   413                           
   414                           	psect	bssBANK0
   415  0037                     __pbssBANK0:	
   416  0037                     LCDWriteInt@F1170:	
   417  0037                     	ds	5
   418  003C                     _SB:	
   419  003C                     	ds	2
   420  003E                     _FB:	
   421  003E                     	ds	2
   422  0040                     _vrH:	
   423  0040                     	ds	2
   424  0042                     _vrM:	
   425  0042                     	ds	2
   426  0044                     _vrS:	
   427  0044                     	ds	2
   428  0046                     _hours:	
   429  0046                     	ds	2
   430  0048                     _minute:	
   431  0048                     	ds	2
   432  004A                     _second:	
   433  004A                     	ds	2
   434                           
   435                           	psect	dataBANK1
   436  00A0                     __pdataBANK1:	
   437  00A0                     ___cgram:	
   438  00A0                     	ds	64
   439                           
   440                           	psect	inittext
   441  07EA                     init_fetch0:	
   442                           ;	Called with low address in FSR and high address in W
   443                           
   444  07EA  087E               	movf	126,w
   445  07EB  008A               	movwf	10
   446  07EC  087F               	movf	127,w
   447  07ED  0082               	movwf	2
   448  07EE                     init_ram0:	
   449                           ;Called with:
   450                           ;	high address of idata address in btemp 
   451                           ;	low address of idata address in btemp+1 
   452                           ;	low address of data in FSR
   453                           ;	high address + 1 of data in btemp-1
   454                           
   455  07EE  27EA  120A  118A   	fcall	init_fetch0
   456  07F1  0080               	movwf	0
   457  07F2  0A84               	incf	4,f
   458  07F3  0804               	movf	4,w
   459  07F4  067D               	xorwf	125,w
   460  07F5  1903               	btfsc	3,2
   461  07F6  3400               	retlw	0
   462  07F7  0AFF               	incf	127,f
   463  07F8  1903               	btfsc	3,2
   464  07F9  0AFE               	incf	126,f
   465  07FA  2FEE               	goto	init_ram0
   466                           
   467                           	psect	clrtext
   468  06BD                     clear_ram0:	
   469                           ;	Called with FSR containing the base address, and
   470                           ;	W with the last address+1
   471                           
   472  06BD  0064               	clrwdt	;clear the watchdog before getting into this loop
   473  06BE                     clrloop0:	
   474  06BE  0180               	clrf	0	;clear RAM location pointed to by FSR
   475  06BF  0A84               	incf	4,f	;increment pointer
   476  06C0  0604               	xorwf	4,w	;XOR with final address
   477  06C1  1903               	btfsc	3,2	;have we reached the end yet?
   478  06C2  3400               	retlw	0	;all done for this memory range, return
   479  06C3  0604               	xorwf	4,w	;XOR again to restore value
   480  06C4  2EBE               	goto	clrloop0	;do the next byte
   481                           
   482                           	psect	cstackCOMMON
   483  0070                     __pcstackCOMMON:	
   484  0070                     ?_LCDBusyLoop:	
   485  0070                     ?_LCDInit:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_isr:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ??_isr:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 1 bytes @ 0x0
   496                           
   497                           
   498                           ; 1 bytes @ 0x0
   499  0070                     	ds	4
   500  0074                     ??_LCDBusyLoop:	
   501  0074                     ?___awdiv:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ?___awmod:	
   505                           ; 2 bytes @ 0x4
   506                           
   507  0074                     ___awdiv@divisor:	
   508                           ; 2 bytes @ 0x4
   509                           
   510  0074                     ___awmod@divisor:	
   511                           ; 2 bytes @ 0x4
   512                           
   513                           
   514                           ; 2 bytes @ 0x4
   515  0074                     	ds	2
   516  0076                     ?_LCDByte:	
   517  0076                     LCDByte@isdata:	
   518                           ; 1 bytes @ 0x6
   519                           
   520  0076                     ___awdiv@dividend:	
   521                           ; 1 bytes @ 0x6
   522                           
   523  0076                     ___awmod@dividend:	
   524                           ; 2 bytes @ 0x6
   525                           
   526                           
   527                           ; 2 bytes @ 0x6
   528  0076                     	ds	1
   529  0077                     ??_LCDWriteString:	
   530  0077                     ??_LCDGotoXY:	
   531                           ; 1 bytes @ 0x7
   532                           
   533                           
   534                           ; 1 bytes @ 0x7
   535  0077                     	ds	1
   536  0078                     ??_clockTime:	
   537                           
   538                           	psect	cstackBANK0
   539  0020                     __pcstackBANK0:	
   540                           ; 1 bytes @ 0x8
   541                           
   542  0020                     ??___awdiv:	
   543  0020                     ??___awmod:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     LCDBusyLoop@busy:	
   547                           ; 1 bytes @ 0x0
   548                           
   549                           
   550                           ; 1 bytes @ 0x0
   551  0020                     	ds	1
   552  0021                     LCDBusyLoop@temp:	
   553  0021                     ___awdiv@counter:	
   554                           ; 1 bytes @ 0x1
   555                           
   556  0021                     ___awmod@counter:	
   557                           ; 1 bytes @ 0x1
   558                           
   559                           
   560                           ; 1 bytes @ 0x1
   561  0021                     	ds	1
   562  0022                     LCDBusyLoop@status:	
   563  0022                     ___awdiv@sign:	
   564                           ; 1 bytes @ 0x2
   565                           
   566  0022                     ___awmod@sign:	
   567                           ; 1 bytes @ 0x2
   568                           
   569                           
   570                           ; 1 bytes @ 0x2
   571  0022                     	ds	1
   572  0023                     ??_LCDByte:	
   573  0023                     ___awdiv@quotient:	
   574                           ; 1 bytes @ 0x3
   575                           
   576                           
   577                           ; 2 bytes @ 0x3
   578  0023                     	ds	2
   579  0025                     LCDByte@hn:	
   580                           
   581                           ; 1 bytes @ 0x5
   582  0025                     	ds	1
   583  0026                     LCDByte@ln:	
   584                           
   585                           ; 1 bytes @ 0x6
   586  0026                     	ds	1
   587  0027                     LCDByte@c:	
   588                           
   589                           ; 1 bytes @ 0x7
   590  0027                     	ds	1
   591  0028                     LCDByte@temp:	
   592                           
   593                           ; 1 bytes @ 0x8
   594  0028                     	ds	1
   595  0029                     ??_LCDInit:	
   596  0029                     ?_LCDWriteString:	
   597                           ; 1 bytes @ 0x9
   598                           
   599  0029                     ?_LCDGotoXY:	
   600                           ; 1 bytes @ 0x9
   601                           
   602  0029                     LCDGotoXY@y:	
   603                           ; 1 bytes @ 0x9
   604                           
   605  0029                     LCDWriteString@msg:	
   606                           ; 1 bytes @ 0x9
   607                           
   608                           
   609                           ; 2 bytes @ 0x9
   610  0029                     	ds	1
   611  002A                     LCDGotoXY@x:	
   612                           
   613                           ; 1 bytes @ 0xA
   614  002A                     	ds	1
   615  002B                     LCDInit@style:	
   616  002B                     LCDWriteString@cc:	
   617                           ; 1 bytes @ 0xB
   618                           
   619                           
   620                           ; 1 bytes @ 0xB
   621  002B                     	ds	1
   622  002C                     ?_clockTime:	
   623  002C                     LCDInit@__i:	
   624                           ; 1 bytes @ 0xC
   625                           
   626  002C                     clockTime@x:	
   627                           ; 1 bytes @ 0xC
   628                           
   629                           
   630                           ; 2 bytes @ 0xC
   631  002C                     	ds	2
   632  002E                     ??_main:	
   633                           
   634                           ; 1 bytes @ 0xE
   635  002E                     	ds	1
   636  002F                     main@smile:	
   637                           
   638                           ; 8 bytes @ 0xF
   639  002F                     	ds	8
   640                           
   641                           	psect	maintext
   642  002F                     __pmaintext:	
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 130 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  smile           8   15[BANK0 ] unsigned char [8]
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : B00/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       8       0       0       0
   664 ;;      Temps:          0       1       0       0       0
   665 ;;      Totals:         0       9       0       0       0
   666 ;;Total ram usage:        9 bytes
   667 ;; Hardware stack levels required when called:    5
   668 ;; This function calls:
   669 ;;		_LCDByte
   670 ;;		_LCDGotoXY
   671 ;;		_LCDInit
   672 ;;		_LCDWriteString
   673 ;;		___awdiv
   674 ;;		___awmod
   675 ;;		_clockTime
   676 ;; This function is called by:
   677 ;;		Startup code after reset
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _main
   683  002F                     _main:	
   684                           
   685                           ;main.c: 132: uint8_t smile[8];
   686                           ;main.c: 133: TRISB=0b00000000;
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   690  002F  1683               	bsf	3,5	;RP0=1, select bank1
   691  0030  1303               	bcf	3,6	;RP1=0, select bank1
   692  0031  0186               	clrf	6	;volatile
   693                           
   694                           ;main.c: 134: PORTB=0xFF;
   695  0032  30FF               	movlw	255
   696  0033  1283               	bcf	3,5	;RP0=0, select bank0
   697  0034  1303               	bcf	3,6	;RP1=0, select bank0
   698  0035  0086               	movwf	6	;volatile
   699                           
   700                           ;main.c: 136: GIE=1;
   701  0036  178B               	bsf	11,7	;volatile
   702                           
   703                           ;main.c: 137: PEIE=1;
   704  0037  170B               	bsf	11,6	;volatile
   705                           
   706                           ;main.c: 139: TMR0IE=1;
   707  0038  168B               	bsf	11,5	;volatile
   708                           
   709                           ;main.c: 140: OPTION_REG=0b00000111;
   710  0039  3007               	movlw	7
   711  003A  1683               	bsf	3,5	;RP0=1, select bank1
   712  003B  1303               	bcf	3,6	;RP1=0, select bank1
   713  003C  0081               	movwf	1	;volatile
   714                           
   715                           ;main.c: 141: TMR0=0;
   716  003D  1283               	bcf	3,5	;RP0=0, select bank0
   717  003E  1303               	bcf	3,6	;RP1=0, select bank0
   718  003F  0181               	clrf	1	;volatile
   719                           
   720                           ;main.c: 143: TMR1ON=1;
   721  0040  1410               	bsf	16,0	;volatile
   722                           
   723                           ;main.c: 144: TMR1IE=1;
   724  0041  1683               	bsf	3,5	;RP0=1, select bank1
   725  0042  1303               	bcf	3,6	;RP1=0, select bank1
   726  0043  140C               	bsf	12,0	;volatile
   727                           
   728                           ;main.c: 145: TMR1CS=0;
   729  0044  1283               	bcf	3,5	;RP0=0, select bank0
   730  0045  1303               	bcf	3,6	;RP1=0, select bank0
   731  0046  1090               	bcf	16,1	;volatile
   732                           
   733                           ;main.c: 146: T1CKPS1=1;
   734  0047  1690               	bsf	16,5	;volatile
   735                           
   736                           ;main.c: 147: T1CKPS0=1;
   737  0048  1610               	bsf	16,4	;volatile
   738                           
   739                           ;main.c: 148: TMR1=34286;
   740  0049  3085               	movlw	133
   741  004A  008F               	movwf	15	;volatile
   742  004B  30EE               	movlw	238
   743  004C  008E               	movwf	14	;volatile
   744                           
   745                           ;main.c: 150: TMR2ON=1;
   746  004D  1512               	bsf	18,2	;volatile
   747                           
   748                           ;main.c: 151: TMR2IE=1;
   749  004E  1683               	bsf	3,5	;RP0=1, select bank1
   750  004F  1303               	bcf	3,6	;RP1=0, select bank1
   751  0050  148C               	bsf	12,1	;volatile
   752                           
   753                           ;main.c: 152: T2CKPS1=1;
   754  0051  1283               	bcf	3,5	;RP0=0, select bank0
   755  0052  1303               	bcf	3,6	;RP1=0, select bank0
   756  0053  1492               	bsf	18,1	;volatile
   757                           
   758                           ;main.c: 153: T2CKPS0=1;
   759  0054  1412               	bsf	18,0	;volatile
   760                           
   761                           ;main.c: 154: TMR2=0;
   762  0055  0191               	clrf	17	;volatile
   763                           
   764                           ;main.c: 156: LCDInit(0B00000000);
   765  0056  3000               	movlw	0
   766  0057  120A  118A  250B  120A  118A  	fcall	_LCDInit
   767                           
   768                           ;main.c: 157: (LCDByte(0b00000001,0));
   769  005C  01F6               	clrf	LCDByte@isdata
   770  005D  3001               	movlw	1
   771  005E  120A  118A  2786  120A  118A  	fcall	_LCDByte
   772                           
   773                           ;main.c: 159: smile[0] = 0b00100;
   774  0063  3004               	movlw	4
   775  0064  1283               	bcf	3,5	;RP0=0, select bank0
   776  0065  1303               	bcf	3,6	;RP1=0, select bank0
   777  0066  00AE               	movwf	??_main
   778  0067  082E               	movf	??_main,w
   779  0068  00AF               	movwf	main@smile
   780                           
   781                           ;main.c: 160: smile[1] = 0b00010;
   782  0069  3002               	movlw	2
   783  006A  00AE               	movwf	??_main
   784  006B  082E               	movf	??_main,w
   785  006C  00B0               	movwf	main@smile+1
   786                           
   787                           ;main.c: 161: smile[2] = 0b10001;
   788  006D  3011               	movlw	17
   789  006E  00AE               	movwf	??_main
   790  006F  082E               	movf	??_main,w
   791  0070  00B1               	movwf	main@smile+2
   792                           
   793                           ;main.c: 162: smile[3] = 0b00001;
   794  0071  01B2               	clrf	main@smile+3
   795  0072  0AB2               	incf	main@smile+3,f
   796                           
   797                           ;main.c: 163: smile[4] = 0b10001;
   798  0073  3011               	movlw	17
   799  0074  00AE               	movwf	??_main
   800  0075  082E               	movf	??_main,w
   801  0076  00B3               	movwf	main@smile+4
   802                           
   803                           ;main.c: 164: smile[5] = 0b00010;
   804  0077  3002               	movlw	2
   805  0078  00AE               	movwf	??_main
   806  0079  082E               	movf	??_main,w
   807  007A  00B4               	movwf	main@smile+5
   808                           
   809                           ;main.c: 165: smile[6] = 0b00100;
   810  007B  3004               	movlw	4
   811  007C  00AE               	movwf	??_main
   812  007D  082E               	movf	??_main,w
   813  007E  00B5               	movwf	main@smile+6
   814                           
   815                           ;main.c: 166: smile[7] = 0b00000;
   816  007F  01B6               	clrf	main@smile+7
   817                           
   818                           ;main.c: 170: LCDGotoXY(0,0);
   819  0080  01A9               	clrf	LCDGotoXY@y
   820  0081  3000               	movlw	0
   821  0082  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   822                           
   823                           ;main.c: 171: LCDWriteString("Kriger");
   824  0087  301A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   825  0088  1283               	bcf	3,5	;RP0=0, select bank0
   826  0089  1303               	bcf	3,6	;RP1=0, select bank0
   827  008A  00A9               	movwf	LCDWriteString@msg
   828  008B  3080               	movlw	128
   829  008C  00AA               	movwf	LCDWriteString@msg+1
   830  008D  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
   831                           
   832                           ;main.c: 172: LCDGotoXY(0,1);
   833  0092  1283               	bcf	3,5	;RP0=0, select bank0
   834  0093  1303               	bcf	3,6	;RP1=0, select bank0
   835  0094  01A9               	clrf	LCDGotoXY@y
   836  0095  0AA9               	incf	LCDGotoXY@y,f
   837  0096  3000               	movlw	0
   838  0097  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   839                           
   840                           ;main.c: 173: LCDWriteString("Khlyzov");
   841  009C  3012               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
   842  009D  1283               	bcf	3,5	;RP0=0, select bank0
   843  009E  1303               	bcf	3,6	;RP1=0, select bank0
   844  009F  00A9               	movwf	LCDWriteString@msg
   845  00A0  3080               	movlw	128
   846  00A1  00AA               	movwf	LCDWriteString@msg+1
   847  00A2  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
   848                           
   849                           ;main.c: 174: LCDGotoXY(0,2);
   850  00A7  3002               	movlw	2
   851  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   852  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   853  00AA  00AE               	movwf	??_main
   854  00AB  082E               	movf	??_main,w
   855  00AC  00A9               	movwf	LCDGotoXY@y
   856  00AD  3000               	movlw	0
   857  00AE  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   858                           
   859                           ;main.c: 175: LCDWriteString("Kozlova");
   860  00B3  300A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
   861  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   862  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   863  00B6  00A9               	movwf	LCDWriteString@msg
   864  00B7  3080               	movlw	128
   865  00B8  00AA               	movwf	LCDWriteString@msg+1
   866  00B9  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
   867                           
   868                           ;main.c: 176: LCDGotoXY(0,3);
   869  00BE  3003               	movlw	3
   870  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   871  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   872  00C1  00AE               	movwf	??_main
   873  00C2  082E               	movf	??_main,w
   874  00C3  00A9               	movwf	LCDGotoXY@y
   875  00C4  3000               	movlw	0
   876  00C5  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   877                           
   878                           ;main.c: 177: LCDWriteString("Savinkov");
   879  00CA  3001               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
   880  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   881  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   882  00CD  00A9               	movwf	LCDWriteString@msg
   883  00CE  3080               	movlw	128
   884  00CF  00AA               	movwf	LCDWriteString@msg+1
   885  00D0  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
   886                           
   887                           ;main.c: 178: LCDGotoXY(10,3);
   888  00D5  3003               	movlw	3
   889  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   890  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   891  00D8  00AE               	movwf	??_main
   892  00D9  082E               	movf	??_main,w
   893  00DA  00A9               	movwf	LCDGotoXY@y
   894  00DB  300A               	movlw	10
   895  00DC  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   896                           
   897                           ;main.c: 179: LCDWriteString(smile);
   898  00E1  302F               	movlw	(low (main@smile| 0))& (0+255)
   899  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   900  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   901  00E4  00A9               	movwf	LCDWriteString@msg
   902  00E5  3000               	movlw	0
   903  00E6  00AA               	movwf	LCDWriteString@msg+1
   904  00E7  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
   905  00EC                     l2111:	
   906                           ;main.c: 181: while(1)
   907                           
   908                           
   909                           ;main.c: 182: {
   910                           ;main.c: 183: LCDGotoXY(8,0);
   911  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   912  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   913  00EE  01A9               	clrf	LCDGotoXY@y
   914  00EF  3008               	movlw	8
   915  00F0  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   916                           
   917                           ;main.c: 184: clockTime(hours/10);
   918  00F5  300A               	movlw	10
   919  00F6  00F4               	movwf	___awdiv@divisor
   920  00F7  3000               	movlw	0
   921  00F8  00F5               	movwf	___awdiv@divisor+1
   922  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   923  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   924  00FB  0847               	movf	_hours+1,w
   925  00FC  00F7               	movwf	___awdiv@dividend+1
   926  00FD  0846               	movf	_hours,w
   927  00FE  00F6               	movwf	___awdiv@dividend
   928  00FF  120A  118A  256D  120A  118A  	fcall	___awdiv
   929  0104  0875               	movf	?___awdiv+1,w
   930  0105  1283               	bcf	3,5	;RP0=0, select bank0
   931  0106  1303               	bcf	3,6	;RP1=0, select bank0
   932  0107  00AD               	movwf	clockTime@x+1
   933  0108  0874               	movf	?___awdiv,w
   934  0109  00AC               	movwf	clockTime@x
   935  010A  120A  118A  2415  120A  118A  	fcall	_clockTime
   936                           
   937                           ;main.c: 185: LCDGotoXY(9,0);
   938  010F  1283               	bcf	3,5	;RP0=0, select bank0
   939  0110  1303               	bcf	3,6	;RP1=0, select bank0
   940  0111  01A9               	clrf	LCDGotoXY@y
   941  0112  3009               	movlw	9
   942  0113  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   943                           
   944                           ;main.c: 186: clockTime(hours%10);
   945  0118  300A               	movlw	10
   946  0119  00F4               	movwf	___awmod@divisor
   947  011A  3000               	movlw	0
   948  011B  00F5               	movwf	___awmod@divisor+1
   949  011C  1283               	bcf	3,5	;RP0=0, select bank0
   950  011D  1303               	bcf	3,6	;RP1=0, select bank0
   951  011E  0847               	movf	_hours+1,w
   952  011F  00F7               	movwf	___awmod@dividend+1
   953  0120  0846               	movf	_hours,w
   954  0121  00F6               	movwf	___awmod@dividend
   955  0122  120A  118A  2670  120A  118A  	fcall	___awmod
   956  0127  0875               	movf	?___awmod+1,w
   957  0128  1283               	bcf	3,5	;RP0=0, select bank0
   958  0129  1303               	bcf	3,6	;RP1=0, select bank0
   959  012A  00AD               	movwf	clockTime@x+1
   960  012B  0874               	movf	?___awmod,w
   961  012C  00AC               	movwf	clockTime@x
   962  012D  120A  118A  2415  120A  118A  	fcall	_clockTime
   963                           
   964                           ;main.c: 187: LCDGotoXY(10,0);
   965  0132  1283               	bcf	3,5	;RP0=0, select bank0
   966  0133  1303               	bcf	3,6	;RP1=0, select bank0
   967  0134  01A9               	clrf	LCDGotoXY@y
   968  0135  300A               	movlw	10
   969  0136  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   970                           
   971                           ;main.c: 188: LCDWriteString(":");
   972  013B  3035               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
   973  013C  1283               	bcf	3,5	;RP0=0, select bank0
   974  013D  1303               	bcf	3,6	;RP1=0, select bank0
   975  013E  00A9               	movwf	LCDWriteString@msg
   976  013F  3080               	movlw	128
   977  0140  00AA               	movwf	LCDWriteString@msg+1
   978  0141  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
   979                           
   980                           ;main.c: 189: LCDGotoXY(11,0);
   981  0146  1283               	bcf	3,5	;RP0=0, select bank0
   982  0147  1303               	bcf	3,6	;RP1=0, select bank0
   983  0148  01A9               	clrf	LCDGotoXY@y
   984  0149  300B               	movlw	11
   985  014A  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
   986                           
   987                           ;main.c: 190: clockTime(minute/10);
   988  014F  300A               	movlw	10
   989  0150  00F4               	movwf	___awdiv@divisor
   990  0151  3000               	movlw	0
   991  0152  00F5               	movwf	___awdiv@divisor+1
   992  0153  1283               	bcf	3,5	;RP0=0, select bank0
   993  0154  1303               	bcf	3,6	;RP1=0, select bank0
   994  0155  0849               	movf	_minute+1,w
   995  0156  00F7               	movwf	___awdiv@dividend+1
   996  0157  0848               	movf	_minute,w
   997  0158  00F6               	movwf	___awdiv@dividend
   998  0159  120A  118A  256D  120A  118A  	fcall	___awdiv
   999  015E  0875               	movf	?___awdiv+1,w
  1000  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0161  00AD               	movwf	clockTime@x+1
  1003  0162  0874               	movf	?___awdiv,w
  1004  0163  00AC               	movwf	clockTime@x
  1005  0164  120A  118A  2415  120A  118A  	fcall	_clockTime
  1006                           
  1007                           ;main.c: 191: LCDGotoXY(12,0);
  1008  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1009  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1010  016B  01A9               	clrf	LCDGotoXY@y
  1011  016C  300C               	movlw	12
  1012  016D  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1013                           
  1014                           ;main.c: 192: clockTime(minute%10);
  1015  0172  300A               	movlw	10
  1016  0173  00F4               	movwf	___awmod@divisor
  1017  0174  3000               	movlw	0
  1018  0175  00F5               	movwf	___awmod@divisor+1
  1019  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0178  0849               	movf	_minute+1,w
  1022  0179  00F7               	movwf	___awmod@dividend+1
  1023  017A  0848               	movf	_minute,w
  1024  017B  00F6               	movwf	___awmod@dividend
  1025  017C  120A  118A  2670  120A  118A  	fcall	___awmod
  1026  0181  0875               	movf	?___awmod+1,w
  1027  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0184  00AD               	movwf	clockTime@x+1
  1030  0185  0874               	movf	?___awmod,w
  1031  0186  00AC               	movwf	clockTime@x
  1032  0187  120A  118A  2415  120A  118A  	fcall	_clockTime
  1033                           
  1034                           ;main.c: 193: LCDGotoXY(13,0);
  1035  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1036  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1037  018E  01A9               	clrf	LCDGotoXY@y
  1038  018F  300D               	movlw	13
  1039  0190  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1040                           
  1041                           ;main.c: 194: LCDWriteString(":");
  1042  0195  3035               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1043  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0198  00A9               	movwf	LCDWriteString@msg
  1046  0199  3080               	movlw	128
  1047  019A  00AA               	movwf	LCDWriteString@msg+1
  1048  019B  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
  1049                           
  1050                           ;main.c: 195: LCDGotoXY(14,0);
  1051  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1052  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1053  01A2  01A9               	clrf	LCDGotoXY@y
  1054  01A3  300E               	movlw	14
  1055  01A4  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1056                           
  1057                           ;main.c: 196: clockTime(second/10);
  1058  01A9  300A               	movlw	10
  1059  01AA  00F4               	movwf	___awdiv@divisor
  1060  01AB  3000               	movlw	0
  1061  01AC  00F5               	movwf	___awdiv@divisor+1
  1062  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1063  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1064  01AF  084B               	movf	_second+1,w
  1065  01B0  00F7               	movwf	___awdiv@dividend+1
  1066  01B1  084A               	movf	_second,w
  1067  01B2  00F6               	movwf	___awdiv@dividend
  1068  01B3  120A  118A  256D  120A  118A  	fcall	___awdiv
  1069  01B8  0875               	movf	?___awdiv+1,w
  1070  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1071  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1072  01BB  00AD               	movwf	clockTime@x+1
  1073  01BC  0874               	movf	?___awdiv,w
  1074  01BD  00AC               	movwf	clockTime@x
  1075  01BE  120A  118A  2415  120A  118A  	fcall	_clockTime
  1076                           
  1077                           ;main.c: 197: LCDGotoXY(15,0);
  1078  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1079  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1080  01C5  01A9               	clrf	LCDGotoXY@y
  1081  01C6  300F               	movlw	15
  1082  01C7  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1083                           
  1084                           ;main.c: 198: clockTime(second%10);
  1085  01CC  300A               	movlw	10
  1086  01CD  00F4               	movwf	___awmod@divisor
  1087  01CE  3000               	movlw	0
  1088  01CF  00F5               	movwf	___awmod@divisor+1
  1089  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1090  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1091  01D2  084B               	movf	_second+1,w
  1092  01D3  00F7               	movwf	___awmod@dividend+1
  1093  01D4  084A               	movf	_second,w
  1094  01D5  00F6               	movwf	___awmod@dividend
  1095  01D6  120A  118A  2670  120A  118A  	fcall	___awmod
  1096  01DB  0875               	movf	?___awmod+1,w
  1097  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1098  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1099  01DE  00AD               	movwf	clockTime@x+1
  1100  01DF  0874               	movf	?___awmod,w
  1101  01E0  00AC               	movwf	clockTime@x
  1102  01E1  120A  118A  2415  120A  118A  	fcall	_clockTime
  1103                           
  1104                           ;main.c: 200: vrH=hours;
  1105  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1106  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1107  01E8  0847               	movf	_hours+1,w
  1108  01E9  00C1               	movwf	_vrH+1
  1109  01EA  0846               	movf	_hours,w
  1110  01EB  00C0               	movwf	_vrH
  1111                           
  1112                           ;main.c: 201: vrM=minute;
  1113  01EC  0849               	movf	_minute+1,w
  1114  01ED  00C3               	movwf	_vrM+1
  1115  01EE  0848               	movf	_minute,w
  1116  01EF  00C2               	movwf	_vrM
  1117                           
  1118                           ;main.c: 202: vrS=second;
  1119  01F0  084B               	movf	_second+1,w
  1120  01F1  00C5               	movwf	_vrS+1
  1121  01F2  084A               	movf	_second,w
  1122  01F3  00C4               	movwf	_vrS
  1123                           
  1124                           ;main.c: 203: if(FB==1)
  1125  01F4  033E               	decf	_FB,w
  1126  01F5  043F               	iorwf	_FB+1,w
  1127  01F6  1D03               	btfss	3,2
  1128  01F7  2B0C               	goto	l2175
  1129                           
  1130                           ;main.c: 204: {
  1131                           ;main.c: 205: LCDGotoXY(8,2);
  1132  01F8  3002               	movlw	2
  1133  01F9  00AE               	movwf	??_main
  1134  01FA  082E               	movf	??_main,w
  1135  01FB  00A9               	movwf	LCDGotoXY@y
  1136  01FC  3008               	movlw	8
  1137  01FD  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1138                           
  1139                           ;main.c: 206: clockTime(vrH/10);
  1140  0202  300A               	movlw	10
  1141  0203  00F4               	movwf	___awdiv@divisor
  1142  0204  3000               	movlw	0
  1143  0205  00F5               	movwf	___awdiv@divisor+1
  1144  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0208  0841               	movf	_vrH+1,w
  1147  0209  00F7               	movwf	___awdiv@dividend+1
  1148  020A  0840               	movf	_vrH,w
  1149  020B  00F6               	movwf	___awdiv@dividend
  1150  020C  120A  118A  256D  120A  118A  	fcall	___awdiv
  1151  0211  0875               	movf	?___awdiv+1,w
  1152  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0214  00AD               	movwf	clockTime@x+1
  1155  0215  0874               	movf	?___awdiv,w
  1156  0216  00AC               	movwf	clockTime@x
  1157  0217  120A  118A  2415  120A  118A  	fcall	_clockTime
  1158                           
  1159                           ;main.c: 207: LCDGotoXY(9,2);
  1160  021C  3002               	movlw	2
  1161  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1162  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1163  021F  00AE               	movwf	??_main
  1164  0220  082E               	movf	??_main,w
  1165  0221  00A9               	movwf	LCDGotoXY@y
  1166  0222  3009               	movlw	9
  1167  0223  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1168                           
  1169                           ;main.c: 208: clockTime(vrH%10);
  1170  0228  300A               	movlw	10
  1171  0229  00F4               	movwf	___awmod@divisor
  1172  022A  3000               	movlw	0
  1173  022B  00F5               	movwf	___awmod@divisor+1
  1174  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1175  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1176  022E  0841               	movf	_vrH+1,w
  1177  022F  00F7               	movwf	___awmod@dividend+1
  1178  0230  0840               	movf	_vrH,w
  1179  0231  00F6               	movwf	___awmod@dividend
  1180  0232  120A  118A  2670  120A  118A  	fcall	___awmod
  1181  0237  0875               	movf	?___awmod+1,w
  1182  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1184  023A  00AD               	movwf	clockTime@x+1
  1185  023B  0874               	movf	?___awmod,w
  1186  023C  00AC               	movwf	clockTime@x
  1187  023D  120A  118A  2415  120A  118A  	fcall	_clockTime
  1188                           
  1189                           ;main.c: 209: LCDGotoXY(10,2);
  1190  0242  3002               	movlw	2
  1191  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0245  00AE               	movwf	??_main
  1194  0246  082E               	movf	??_main,w
  1195  0247  00A9               	movwf	LCDGotoXY@y
  1196  0248  300A               	movlw	10
  1197  0249  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1198                           
  1199                           ;main.c: 210: LCDWriteString(":");
  1200  024E  3035               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1201  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0251  00A9               	movwf	LCDWriteString@msg
  1204  0252  3080               	movlw	128
  1205  0253  00AA               	movwf	LCDWriteString@msg+1
  1206  0254  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
  1207                           
  1208                           ;main.c: 211: LCDGotoXY(11,2);
  1209  0259  3002               	movlw	2
  1210  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1211  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1212  025C  00AE               	movwf	??_main
  1213  025D  082E               	movf	??_main,w
  1214  025E  00A9               	movwf	LCDGotoXY@y
  1215  025F  300B               	movlw	11
  1216  0260  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1217                           
  1218                           ;main.c: 212: clockTime(vrM/10);
  1219  0265  300A               	movlw	10
  1220  0266  00F4               	movwf	___awdiv@divisor
  1221  0267  3000               	movlw	0
  1222  0268  00F5               	movwf	___awdiv@divisor+1
  1223  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1224  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1225  026B  0843               	movf	_vrM+1,w
  1226  026C  00F7               	movwf	___awdiv@dividend+1
  1227  026D  0842               	movf	_vrM,w
  1228  026E  00F6               	movwf	___awdiv@dividend
  1229  026F  120A  118A  256D  120A  118A  	fcall	___awdiv
  1230  0274  0875               	movf	?___awdiv+1,w
  1231  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0277  00AD               	movwf	clockTime@x+1
  1234  0278  0874               	movf	?___awdiv,w
  1235  0279  00AC               	movwf	clockTime@x
  1236  027A  120A  118A  2415  120A  118A  	fcall	_clockTime
  1237                           
  1238                           ;main.c: 213: LCDGotoXY(12,2);
  1239  027F  3002               	movlw	2
  1240  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0282  00AE               	movwf	??_main
  1243  0283  082E               	movf	??_main,w
  1244  0284  00A9               	movwf	LCDGotoXY@y
  1245  0285  300C               	movlw	12
  1246  0286  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1247                           
  1248                           ;main.c: 214: clockTime(vrM%10);
  1249  028B  300A               	movlw	10
  1250  028C  00F4               	movwf	___awmod@divisor
  1251  028D  3000               	movlw	0
  1252  028E  00F5               	movwf	___awmod@divisor+1
  1253  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0291  0843               	movf	_vrM+1,w
  1256  0292  00F7               	movwf	___awmod@dividend+1
  1257  0293  0842               	movf	_vrM,w
  1258  0294  00F6               	movwf	___awmod@dividend
  1259  0295  120A  118A  2670  120A  118A  	fcall	___awmod
  1260  029A  0875               	movf	?___awmod+1,w
  1261  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1262  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1263  029D  00AD               	movwf	clockTime@x+1
  1264  029E  0874               	movf	?___awmod,w
  1265  029F  00AC               	movwf	clockTime@x
  1266  02A0  120A  118A  2415  120A  118A  	fcall	_clockTime
  1267                           
  1268                           ;main.c: 215: LCDGotoXY(13,2);
  1269  02A5  3002               	movlw	2
  1270  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1271  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1272  02A8  00AE               	movwf	??_main
  1273  02A9  082E               	movf	??_main,w
  1274  02AA  00A9               	movwf	LCDGotoXY@y
  1275  02AB  300D               	movlw	13
  1276  02AC  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1277                           
  1278                           ;main.c: 216: LCDWriteString(":");
  1279  02B1  3035               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1280  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1281  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1282  02B4  00A9               	movwf	LCDWriteString@msg
  1283  02B5  3080               	movlw	128
  1284  02B6  00AA               	movwf	LCDWriteString@msg+1
  1285  02B7  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
  1286                           
  1287                           ;main.c: 217: LCDGotoXY(14,2);
  1288  02BC  3002               	movlw	2
  1289  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1290  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1291  02BF  00AE               	movwf	??_main
  1292  02C0  082E               	movf	??_main,w
  1293  02C1  00A9               	movwf	LCDGotoXY@y
  1294  02C2  300E               	movlw	14
  1295  02C3  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1296                           
  1297                           ;main.c: 218: clockTime(vrS/10);
  1298  02C8  300A               	movlw	10
  1299  02C9  00F4               	movwf	___awdiv@divisor
  1300  02CA  3000               	movlw	0
  1301  02CB  00F5               	movwf	___awdiv@divisor+1
  1302  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1303  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1304  02CE  0845               	movf	_vrS+1,w
  1305  02CF  00F7               	movwf	___awdiv@dividend+1
  1306  02D0  0844               	movf	_vrS,w
  1307  02D1  00F6               	movwf	___awdiv@dividend
  1308  02D2  120A  118A  256D  120A  118A  	fcall	___awdiv
  1309  02D7  0875               	movf	?___awdiv+1,w
  1310  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1311  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1312  02DA  00AD               	movwf	clockTime@x+1
  1313  02DB  0874               	movf	?___awdiv,w
  1314  02DC  00AC               	movwf	clockTime@x
  1315  02DD  120A  118A  2415  120A  118A  	fcall	_clockTime
  1316                           
  1317                           ;main.c: 219: LCDGotoXY(15,2);
  1318  02E2  3002               	movlw	2
  1319  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1320  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1321  02E5  00AE               	movwf	??_main
  1322  02E6  082E               	movf	??_main,w
  1323  02E7  00A9               	movwf	LCDGotoXY@y
  1324  02E8  300F               	movlw	15
  1325  02E9  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1326                           
  1327                           ;main.c: 220: clockTime(vrS%10);
  1328  02EE  300A               	movlw	10
  1329  02EF  00F4               	movwf	___awmod@divisor
  1330  02F0  3000               	movlw	0
  1331  02F1  00F5               	movwf	___awmod@divisor+1
  1332  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1333  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1334  02F4  0845               	movf	_vrS+1,w
  1335  02F5  00F7               	movwf	___awmod@dividend+1
  1336  02F6  0844               	movf	_vrS,w
  1337  02F7  00F6               	movwf	___awmod@dividend
  1338  02F8  120A  118A  2670  120A  118A  	fcall	___awmod
  1339  02FD  0875               	movf	?___awmod+1,w
  1340  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1341  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0300  00AD               	movwf	clockTime@x+1
  1343  0301  0874               	movf	?___awmod,w
  1344  0302  00AC               	movwf	clockTime@x
  1345  0303  120A  118A  2415  120A  118A  	fcall	_clockTime
  1346                           
  1347                           ;main.c: 221: FB=0;
  1348  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1350  030A  01BE               	clrf	_FB
  1351  030B  01BF               	clrf	_FB+1
  1352  030C                     l2175:	
  1353                           
  1354                           ;main.c: 222: }
  1355                           ;main.c: 223: if (SB==1)
  1356  030C  033C               	decf	_SB,w
  1357  030D  043D               	iorwf	_SB+1,w
  1358  030E  1D03               	btfss	3,2
  1359  030F  28EC               	goto	l2111
  1360                           
  1361                           ;main.c: 224: {
  1362                           ;main.c: 225: LCDGotoXY(8,1);
  1363  0310  01A9               	clrf	LCDGotoXY@y
  1364  0311  0AA9               	incf	LCDGotoXY@y,f
  1365  0312  3008               	movlw	8
  1366  0313  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1367                           
  1368                           ;main.c: 226: clockTime(vrH/10);
  1369  0318  300A               	movlw	10
  1370  0319  00F4               	movwf	___awdiv@divisor
  1371  031A  3000               	movlw	0
  1372  031B  00F5               	movwf	___awdiv@divisor+1
  1373  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1374  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1375  031E  0841               	movf	_vrH+1,w
  1376  031F  00F7               	movwf	___awdiv@dividend+1
  1377  0320  0840               	movf	_vrH,w
  1378  0321  00F6               	movwf	___awdiv@dividend
  1379  0322  120A  118A  256D  120A  118A  	fcall	___awdiv
  1380  0327  0875               	movf	?___awdiv+1,w
  1381  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1383  032A  00AD               	movwf	clockTime@x+1
  1384  032B  0874               	movf	?___awdiv,w
  1385  032C  00AC               	movwf	clockTime@x
  1386  032D  120A  118A  2415  120A  118A  	fcall	_clockTime
  1387                           
  1388                           ;main.c: 227: LCDGotoXY(9,1);
  1389  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0334  01A9               	clrf	LCDGotoXY@y
  1392  0335  0AA9               	incf	LCDGotoXY@y,f
  1393  0336  3009               	movlw	9
  1394  0337  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1395                           
  1396                           ;main.c: 228: clockTime(vrH%10);
  1397  033C  300A               	movlw	10
  1398  033D  00F4               	movwf	___awmod@divisor
  1399  033E  3000               	movlw	0
  1400  033F  00F5               	movwf	___awmod@divisor+1
  1401  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0342  0841               	movf	_vrH+1,w
  1404  0343  00F7               	movwf	___awmod@dividend+1
  1405  0344  0840               	movf	_vrH,w
  1406  0345  00F6               	movwf	___awmod@dividend
  1407  0346  120A  118A  2670  120A  118A  	fcall	___awmod
  1408  034B  0875               	movf	?___awmod+1,w
  1409  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1410  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1411  034E  00AD               	movwf	clockTime@x+1
  1412  034F  0874               	movf	?___awmod,w
  1413  0350  00AC               	movwf	clockTime@x
  1414  0351  120A  118A  2415  120A  118A  	fcall	_clockTime
  1415                           
  1416                           ;main.c: 229: LCDGotoXY(10,1);
  1417  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0358  01A9               	clrf	LCDGotoXY@y
  1420  0359  0AA9               	incf	LCDGotoXY@y,f
  1421  035A  300A               	movlw	10
  1422  035B  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1423                           
  1424                           ;main.c: 230: LCDWriteString(":");
  1425  0360  3035               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1426  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0363  00A9               	movwf	LCDWriteString@msg
  1429  0364  3080               	movlw	128
  1430  0365  00AA               	movwf	LCDWriteString@msg+1
  1431  0366  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
  1432                           
  1433                           ;main.c: 231: LCDGotoXY(11,1);
  1434  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1435  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1436  036D  01A9               	clrf	LCDGotoXY@y
  1437  036E  0AA9               	incf	LCDGotoXY@y,f
  1438  036F  300B               	movlw	11
  1439  0370  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1440                           
  1441                           ;main.c: 232: clockTime(vrM/10);
  1442  0375  300A               	movlw	10
  1443  0376  00F4               	movwf	___awdiv@divisor
  1444  0377  3000               	movlw	0
  1445  0378  00F5               	movwf	___awdiv@divisor+1
  1446  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1447  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1448  037B  0843               	movf	_vrM+1,w
  1449  037C  00F7               	movwf	___awdiv@dividend+1
  1450  037D  0842               	movf	_vrM,w
  1451  037E  00F6               	movwf	___awdiv@dividend
  1452  037F  120A  118A  256D  120A  118A  	fcall	___awdiv
  1453  0384  0875               	movf	?___awdiv+1,w
  1454  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0387  00AD               	movwf	clockTime@x+1
  1457  0388  0874               	movf	?___awdiv,w
  1458  0389  00AC               	movwf	clockTime@x
  1459  038A  120A  118A  2415  120A  118A  	fcall	_clockTime
  1460                           
  1461                           ;main.c: 233: LCDGotoXY(12,1);
  1462  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0391  01A9               	clrf	LCDGotoXY@y
  1465  0392  0AA9               	incf	LCDGotoXY@y,f
  1466  0393  300C               	movlw	12
  1467  0394  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1468                           
  1469                           ;main.c: 234: clockTime(vrM%10);
  1470  0399  300A               	movlw	10
  1471  039A  00F4               	movwf	___awmod@divisor
  1472  039B  3000               	movlw	0
  1473  039C  00F5               	movwf	___awmod@divisor+1
  1474  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1475  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1476  039F  0843               	movf	_vrM+1,w
  1477  03A0  00F7               	movwf	___awmod@dividend+1
  1478  03A1  0842               	movf	_vrM,w
  1479  03A2  00F6               	movwf	___awmod@dividend
  1480  03A3  120A  118A  2670  120A  118A  	fcall	___awmod
  1481  03A8  0875               	movf	?___awmod+1,w
  1482  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1483  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1484  03AB  00AD               	movwf	clockTime@x+1
  1485  03AC  0874               	movf	?___awmod,w
  1486  03AD  00AC               	movwf	clockTime@x
  1487  03AE  120A  118A  2415  120A  118A  	fcall	_clockTime
  1488                           
  1489                           ;main.c: 235: LCDGotoXY(13,1);
  1490  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1491  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1492  03B5  01A9               	clrf	LCDGotoXY@y
  1493  03B6  0AA9               	incf	LCDGotoXY@y,f
  1494  03B7  300D               	movlw	13
  1495  03B8  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1496                           
  1497                           ;main.c: 236: LCDWriteString(":");
  1498  03BD  3035               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1499  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1500  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1501  03C0  00A9               	movwf	LCDWriteString@msg
  1502  03C1  3080               	movlw	128
  1503  03C2  00AA               	movwf	LCDWriteString@msg+1
  1504  03C3  120A  118A  25C8  120A  118A  	fcall	_LCDWriteString
  1505                           
  1506                           ;main.c: 237: LCDGotoXY(14,1);
  1507  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1508  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1509  03CA  01A9               	clrf	LCDGotoXY@y
  1510  03CB  0AA9               	incf	LCDGotoXY@y,f
  1511  03CC  300E               	movlw	14
  1512  03CD  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1513                           
  1514                           ;main.c: 238: clockTime(vrS/10);
  1515  03D2  300A               	movlw	10
  1516  03D3  00F4               	movwf	___awdiv@divisor
  1517  03D4  3000               	movlw	0
  1518  03D5  00F5               	movwf	___awdiv@divisor+1
  1519  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1520  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1521  03D8  0845               	movf	_vrS+1,w
  1522  03D9  00F7               	movwf	___awdiv@dividend+1
  1523  03DA  0844               	movf	_vrS,w
  1524  03DB  00F6               	movwf	___awdiv@dividend
  1525  03DC  120A  118A  256D  120A  118A  	fcall	___awdiv
  1526  03E1  0875               	movf	?___awdiv+1,w
  1527  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1528  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1529  03E4  00AD               	movwf	clockTime@x+1
  1530  03E5  0874               	movf	?___awdiv,w
  1531  03E6  00AC               	movwf	clockTime@x
  1532  03E7  120A  118A  2415  120A  118A  	fcall	_clockTime
  1533                           
  1534                           ;main.c: 239: LCDGotoXY(15,1);
  1535  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1536  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1537  03EE  01A9               	clrf	LCDGotoXY@y
  1538  03EF  0AA9               	incf	LCDGotoXY@y,f
  1539  03F0  300F               	movlw	15
  1540  03F1  120A  118A  27C4  120A  118A  	fcall	_LCDGotoXY
  1541                           
  1542                           ;main.c: 240: clockTime(vrS%10);
  1543  03F6  300A               	movlw	10
  1544  03F7  00F4               	movwf	___awmod@divisor
  1545  03F8  3000               	movlw	0
  1546  03F9  00F5               	movwf	___awmod@divisor+1
  1547  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1548  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1549  03FC  0845               	movf	_vrS+1,w
  1550  03FD  00F7               	movwf	___awmod@dividend+1
  1551  03FE  0844               	movf	_vrS,w
  1552  03FF  00F6               	movwf	___awmod@dividend
  1553  0400  120A  118A  2670  120A  118A  	fcall	___awmod
  1554  0405  0875               	movf	?___awmod+1,w
  1555  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0408  00AD               	movwf	clockTime@x+1
  1558  0409  0874               	movf	?___awmod,w
  1559  040A  00AC               	movwf	clockTime@x
  1560  040B  120A  118A  2415  120A  118A  	fcall	_clockTime
  1561                           
  1562                           ;main.c: 241: SB=0;
  1563  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0412  01BC               	clrf	_SB
  1566  0413  01BD               	clrf	_SB+1
  1567  0414  28EC               	goto	l2111
  1568  0415                     __end_of_main:	
  1569                           
  1570                           	psect	text1
  1571  0415                     __ptext1:	
  1572 ;; *************** function _clockTime *****************
  1573 ;; Defined at:
  1574 ;;		line 25 in file "main.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  x               2   12[BANK0 ] int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       2       0       0       0
  1589 ;;      Locals:         0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0
  1591 ;;      Totals:         0       2       0       0       0
  1592 ;;Total ram usage:        2 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    4
  1595 ;; This function calls:
  1596 ;;		_LCDWriteString
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _clockTime
  1604  0415                     _clockTime:	
  1605                           
  1606                           ;main.c: 27: switch(x)
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _clockTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1610  0415  2C7A               	goto	l1909
  1611  0416                     l1887:	
  1612                           ;main.c: 28: {
  1613                           ;main.c: 29: case 0:
  1614                           
  1615                           
  1616                           ;main.c: 30: {
  1617                           ;main.c: 31: LCDWriteString("0");
  1618  0416  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1619  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0419  00A9               	movwf	LCDWriteString@msg
  1622  041A  3080               	movlw	128
  1623  041B  00AA               	movwf	LCDWriteString@msg+1
  1624  041C  120A  118A  25C8   	fcall	_LCDWriteString
  1625                           
  1626                           ;main.c: 32: break;
  1627  041F  0008               	return
  1628  0420                     l1889:	
  1629                           ;main.c: 33: }
  1630                           ;main.c: 34: case 1:
  1631                           
  1632                           
  1633                           ;main.c: 35: {
  1634                           ;main.c: 36: LCDWriteString("1");
  1635  0420  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1636  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0423  00A9               	movwf	LCDWriteString@msg
  1639  0424  3080               	movlw	128
  1640  0425  00AA               	movwf	LCDWriteString@msg+1
  1641  0426  120A  118A  25C8   	fcall	_LCDWriteString
  1642                           
  1643                           ;main.c: 37: break;
  1644  0429  0008               	return
  1645  042A                     l1891:	
  1646                           ;main.c: 38: }
  1647                           ;main.c: 39: case 2:
  1648                           
  1649                           
  1650                           ;main.c: 40: {
  1651                           ;main.c: 41: LCDWriteString("2");
  1652  042A  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1653  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1654  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1655  042D  00A9               	movwf	LCDWriteString@msg
  1656  042E  3080               	movlw	128
  1657  042F  00AA               	movwf	LCDWriteString@msg+1
  1658  0430  120A  118A  25C8   	fcall	_LCDWriteString
  1659                           
  1660                           ;main.c: 42: break;
  1661  0433  0008               	return
  1662  0434                     l1893:	
  1663                           ;main.c: 43: }
  1664                           ;main.c: 44: case 3:
  1665                           
  1666                           
  1667                           ;main.c: 45: {
  1668                           ;main.c: 46: LCDWriteString("3");
  1669  0434  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1670  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0437  00A9               	movwf	LCDWriteString@msg
  1673  0438  3080               	movlw	128
  1674  0439  00AA               	movwf	LCDWriteString@msg+1
  1675  043A  120A  118A  25C8   	fcall	_LCDWriteString
  1676                           
  1677                           ;main.c: 47: break;
  1678  043D  0008               	return
  1679  043E                     l1895:	
  1680                           ;main.c: 48: }
  1681                           ;main.c: 49: case 4:
  1682                           
  1683                           
  1684                           ;main.c: 50: {
  1685                           ;main.c: 51: LCDWriteString("4");
  1686  043E  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1687  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0441  00A9               	movwf	LCDWriteString@msg
  1690  0442  3080               	movlw	128
  1691  0443  00AA               	movwf	LCDWriteString@msg+1
  1692  0444  120A  118A  25C8   	fcall	_LCDWriteString
  1693                           
  1694                           ;main.c: 52: break;
  1695  0447  0008               	return
  1696  0448                     l1897:	
  1697                           ;main.c: 53: }
  1698                           ;main.c: 54: case 5:
  1699                           
  1700                           
  1701                           ;main.c: 55: {
  1702                           ;main.c: 56: LCDWriteString("5");
  1703  0448  302B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1704  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1705  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1706  044B  00A9               	movwf	LCDWriteString@msg
  1707  044C  3080               	movlw	128
  1708  044D  00AA               	movwf	LCDWriteString@msg+1
  1709  044E  120A  118A  25C8   	fcall	_LCDWriteString
  1710                           
  1711                           ;main.c: 57: break;
  1712  0451  0008               	return
  1713  0452                     l1899:	
  1714                           ;main.c: 58: }
  1715                           ;main.c: 59: case 6:
  1716                           
  1717                           
  1718                           ;main.c: 60: {
  1719                           ;main.c: 61: LCDWriteString("6");
  1720  0452  302D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1721  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0455  00A9               	movwf	LCDWriteString@msg
  1724  0456  3080               	movlw	128
  1725  0457  00AA               	movwf	LCDWriteString@msg+1
  1726  0458  120A  118A  25C8   	fcall	_LCDWriteString
  1727                           
  1728                           ;main.c: 62: break;
  1729  045B  0008               	return
  1730  045C                     l1901:	
  1731                           ;main.c: 63: }
  1732                           ;main.c: 64: case 7:
  1733                           
  1734                           
  1735                           ;main.c: 65: {
  1736                           ;main.c: 66: LCDWriteString("7");
  1737  045C  302F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1738  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1739  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1740  045F  00A9               	movwf	LCDWriteString@msg
  1741  0460  3080               	movlw	128
  1742  0461  00AA               	movwf	LCDWriteString@msg+1
  1743  0462  120A  118A  25C8   	fcall	_LCDWriteString
  1744                           
  1745                           ;main.c: 67: break;
  1746  0465  0008               	return
  1747  0466                     l1903:	
  1748                           ;main.c: 68: }
  1749                           ;main.c: 69: case 8:
  1750                           
  1751                           
  1752                           ;main.c: 70: {
  1753                           ;main.c: 71: LCDWriteString("8");
  1754  0466  3031               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1755  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1757  0469  00A9               	movwf	LCDWriteString@msg
  1758  046A  3080               	movlw	128
  1759  046B  00AA               	movwf	LCDWriteString@msg+1
  1760  046C  120A  118A  25C8   	fcall	_LCDWriteString
  1761                           
  1762                           ;main.c: 72: break;
  1763  046F  0008               	return
  1764  0470                     l1905:	
  1765                           ;main.c: 73: }
  1766                           ;main.c: 74: case 9:
  1767                           
  1768                           
  1769                           ;main.c: 75: {
  1770                           ;main.c: 76: LCDWriteString("9");
  1771  0470  3033               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1772  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0473  00A9               	movwf	LCDWriteString@msg
  1775  0474  3080               	movlw	128
  1776  0475  00AA               	movwf	LCDWriteString@msg+1
  1777  0476  120A  118A  25C8   	fcall	_LCDWriteString
  1778                           
  1779                           ;main.c: 78: }
  1780                           ;main.c: 79: }
  1781                           
  1782                           ;main.c: 77: break;
  1783  0479  0008               	return
  1784  047A                     l1909:	
  1785                           
  1786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1787                           ; Switch size 1, requested type "space"
  1788                           ; Number of cases is 1, Range of values is 0 to 0
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte            4     3 (average)
  1792                           ; direct_byte           11     8 (fixed)
  1793                           ; jumptable            260     6 (fixed)
  1794                           ;	Chosen strategy is simple_byte
  1795  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1796  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1797  047C  082D               	movf	clockTime@x+1,w
  1798  047D  3A00               	xorlw	0	; case 0
  1799  047E  1903               	skipnz
  1800  047F  2C81               	goto	l2221
  1801  0480  2CA1               	goto	l154
  1802  0481                     l2221:	
  1803                           
  1804                           ; Switch size 1, requested type "space"
  1805                           ; Number of cases is 10, Range of values is 0 to 9
  1806                           ; switch strategies available:
  1807                           ; Name         Instructions Cycles
  1808                           ; simple_byte           31    16 (average)
  1809                           ; direct_byte           38     8 (fixed)
  1810                           ; jumptable            260     6 (fixed)
  1811                           ;	Chosen strategy is simple_byte
  1812  0481  082C               	movf	clockTime@x,w
  1813  0482  3A00               	xorlw	0	; case 0
  1814  0483  1903               	skipnz
  1815  0484  2C16               	goto	l1887
  1816  0485  3A01               	xorlw	1	; case 1
  1817  0486  1903               	skipnz
  1818  0487  2C20               	goto	l1889
  1819  0488  3A03               	xorlw	3	; case 2
  1820  0489  1903               	skipnz
  1821  048A  2C2A               	goto	l1891
  1822  048B  3A01               	xorlw	1	; case 3
  1823  048C  1903               	skipnz
  1824  048D  2C34               	goto	l1893
  1825  048E  3A07               	xorlw	7	; case 4
  1826  048F  1903               	skipnz
  1827  0490  2C3E               	goto	l1895
  1828  0491  3A01               	xorlw	1	; case 5
  1829  0492  1903               	skipnz
  1830  0493  2C48               	goto	l1897
  1831  0494  3A03               	xorlw	3	; case 6
  1832  0495  1903               	skipnz
  1833  0496  2C52               	goto	l1899
  1834  0497  3A01               	xorlw	1	; case 7
  1835  0498  1903               	skipnz
  1836  0499  2C5C               	goto	l1901
  1837  049A  3A0F               	xorlw	15	; case 8
  1838  049B  1903               	skipnz
  1839  049C  2C66               	goto	l1903
  1840  049D  3A01               	xorlw	1	; case 9
  1841  049E  1903               	skipnz
  1842  049F  2C70               	goto	l1905
  1843  04A0  2CA1               	goto	l154
  1844  04A1                     l154:	
  1845  04A1  0008               	return
  1846  04A2                     __end_of_clockTime:	
  1847                           
  1848                           	psect	text2
  1849  05C8                     __ptext2:	
  1850 ;; *************** function _LCDWriteString *****************
  1851 ;; Defined at:
  1852 ;;		line 250 in file "lcd_hd44780_pic16.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  msg             2    9[BANK0 ] PTR const unsigned char 
  1855 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  1856 ;;		 -> STR_16(2), STR_15(2), STR_14(9), STR_13(8), 
  1857 ;;		 -> STR_12(8), STR_11(7), main@smile(8), STR_10(2), 
  1858 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1859 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1860 ;;		 -> STR_1(2), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  cc              1   11[BANK0 ] char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       2       0       0       0
  1873 ;;      Locals:         0       1       0       0       0
  1874 ;;      Temps:          1       0       0       0       0
  1875 ;;      Totals:         1       3       0       0       0
  1876 ;;Total ram usage:        4 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    3
  1879 ;; This function calls:
  1880 ;;		_LCDByte
  1881 ;; This function is called by:
  1882 ;;		_clockTime
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _LCDWriteString
  1889  05C8                     _LCDWriteString:	
  1890  05C8                     l1819:	
  1891                           ;lcd_hd44780_pic16.c: 280: while(*msg!='\0')
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1895                           
  1896  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1897  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1898  05CA  082A               	movf	LCDWriteString@msg+1,w
  1899  05CB  00FF               	movwf	127
  1900  05CC  0829               	movf	LCDWriteString@msg,w
  1901  05CD  0084               	movwf	4
  1902  05CE  120A  118A  2700  120A  118A  	fcall	stringtab
  1903  05D3  3A00               	xorlw	0
  1904  05D4  1903               	btfsc	3,2
  1905  05D5  0008               	return
  1906                           
  1907                           ;lcd_hd44780_pic16.c: 281: {
  1908                           ;lcd_hd44780_pic16.c: 283: if(*msg=='%')
  1909  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1910  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1911  05D8  082A               	movf	LCDWriteString@msg+1,w
  1912  05D9  00FF               	movwf	127
  1913  05DA  0829               	movf	LCDWriteString@msg,w
  1914  05DB  0084               	movwf	4
  1915  05DC  120A  118A  2700  120A  118A  	fcall	stringtab
  1916  05E1  3A25               	xorlw	37
  1917  05E2  1D03               	skipz
  1918  05E3  2E08               	goto	l1815
  1919                           
  1920                           ;lcd_hd44780_pic16.c: 284: {
  1921                           ;lcd_hd44780_pic16.c: 285: msg++;
  1922  05E4  3001               	movlw	1
  1923  05E5  07A9               	addwf	LCDWriteString@msg,f
  1924  05E6  1803               	skipnc
  1925  05E7  0AAA               	incf	LCDWriteString@msg+1,f
  1926                           
  1927                           ;lcd_hd44780_pic16.c: 286: int8_t cc=*msg-'0';
  1928  05E8  082A               	movf	LCDWriteString@msg+1,w
  1929  05E9  00FF               	movwf	127
  1930  05EA  0829               	movf	LCDWriteString@msg,w
  1931  05EB  0084               	movwf	4
  1932  05EC  120A  118A  2700  120A  118A  	fcall	stringtab
  1933  05F1  3ED0               	addlw	-48
  1934  05F2  00F7               	movwf	??_LCDWriteString
  1935  05F3  0877               	movf	??_LCDWriteString,w
  1936  05F4  00AB               	movwf	LCDWriteString@cc
  1937                           
  1938                           ;lcd_hd44780_pic16.c: 288: if(cc>=0 && cc<=7)
  1939  05F5  1BAB               	btfsc	LCDWriteString@cc,7
  1940  05F6  2E00               	goto	l1811
  1941  05F7  082B               	movf	LCDWriteString@cc,w
  1942  05F8  3A80               	xorlw	128
  1943  05F9  3E78               	addlw	-136
  1944  05FA  1803               	skipnc
  1945  05FB  2E00               	goto	l1811
  1946                           
  1947                           ;lcd_hd44780_pic16.c: 289: {
  1948                           ;lcd_hd44780_pic16.c: 290: (LCDByte(cc,1));
  1949  05FC  01F6               	clrf	LCDByte@isdata
  1950  05FD  0AF6               	incf	LCDByte@isdata,f
  1951  05FE  082B               	movf	LCDWriteString@cc,w
  1952  05FF  2E15               	goto	L1
  1953  0600                     l1811:	
  1954                           ;lcd_hd44780_pic16.c: 291: }
  1955                           
  1956                           
  1957                           ;lcd_hd44780_pic16.c: 292: else
  1958                           ;lcd_hd44780_pic16.c: 293: {
  1959                           ;lcd_hd44780_pic16.c: 294: (LCDByte('%',1));
  1960  0600  01F6               	clrf	LCDByte@isdata
  1961  0601  0AF6               	incf	LCDByte@isdata,f
  1962  0602  3025               	movlw	37
  1963  0603  120A  118A  2786  120A  118A  	fcall	_LCDByte
  1964  0608                     l1815:	
  1965                           ;lcd_hd44780_pic16.c: 296: }
  1966                           ;lcd_hd44780_pic16.c: 297: }
  1967                           
  1968                           ;lcd_hd44780_pic16.c: 295: (LCDByte(*msg,1));
  1969                           
  1970                           
  1971                           ;lcd_hd44780_pic16.c: 298: else
  1972                           ;lcd_hd44780_pic16.c: 299: {
  1973                           ;lcd_hd44780_pic16.c: 300: (LCDByte(*msg,1));
  1974  0608  01F6               	clrf	LCDByte@isdata
  1975  0609  0AF6               	incf	LCDByte@isdata,f
  1976  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1977  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1978  060C  082A               	movf	LCDWriteString@msg+1,w
  1979  060D  00FF               	movwf	127
  1980  060E  0829               	movf	LCDWriteString@msg,w
  1981  060F  0084               	movwf	4
  1982  0610  120A  118A  2700  120A  118A  	fcall	stringtab
  1983  0615                     L1:	
  1984  0615  120A  118A  2786  120A  118A  	fcall	_LCDByte
  1985                           
  1986                           ;lcd_hd44780_pic16.c: 301: }
  1987                           ;lcd_hd44780_pic16.c: 302: msg++;
  1988  061A  3001               	movlw	1
  1989  061B  1283               	bcf	3,5	;RP0=0, select bank0
  1990  061C  1303               	bcf	3,6	;RP1=0, select bank0
  1991  061D  07A9               	addwf	LCDWriteString@msg,f
  1992  061E  1803               	skipnc
  1993  061F  0AAA               	incf	LCDWriteString@msg+1,f
  1994  0620  2DC8               	goto	l1819
  1995  0621                     __end_of_LCDWriteString:	
  1996                           
  1997                           	psect	text3
  1998  0670                     __ptext3:	
  1999 ;; *************** function ___awmod *****************
  2000 ;; Defined at:
  2001 ;;		line 6 in file "K:\Microchip\xc8\v1.45\sources\common\awmod.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  divisor         2    4[COMMON] int 
  2004 ;;  dividend        2    6[COMMON] int 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  sign            1    2[BANK0 ] unsigned char 
  2007 ;;  counter         1    1[BANK0 ] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2    4[COMMON] int 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         4       0       0       0       0
  2018 ;;      Locals:         0       2       0       0       0
  2019 ;;      Temps:          0       1       0       0       0
  2020 ;;      Totals:         4       3       0       0       0
  2021 ;;Total ram usage:        7 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;;		_LCDWriteInt
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function ___awmod
  2034  0670                     ___awmod:	
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2038  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0671  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0672  01A2               	clrf	___awmod@sign
  2041  0673  1FF7               	btfss	___awmod@dividend+1,7
  2042  0674  2E7C               	goto	l1967
  2043  0675  09F6               	comf	___awmod@dividend,f
  2044  0676  09F7               	comf	___awmod@dividend+1,f
  2045  0677  0AF6               	incf	___awmod@dividend,f
  2046  0678  1903               	skipnz
  2047  0679  0AF7               	incf	___awmod@dividend+1,f
  2048  067A  01A2               	clrf	___awmod@sign
  2049  067B  0AA2               	incf	___awmod@sign,f
  2050  067C                     l1967:	
  2051  067C  1FF5               	btfss	___awmod@divisor+1,7
  2052  067D  2E83               	goto	l1971
  2053  067E  09F4               	comf	___awmod@divisor,f
  2054  067F  09F5               	comf	___awmod@divisor+1,f
  2055  0680  0AF4               	incf	___awmod@divisor,f
  2056  0681  1903               	skipnz
  2057  0682  0AF5               	incf	___awmod@divisor+1,f
  2058  0683                     l1971:	
  2059  0683  0874               	movf	___awmod@divisor,w
  2060  0684  0475               	iorwf	___awmod@divisor+1,w
  2061  0685  1903               	btfsc	3,2
  2062  0686  2EB0               	goto	l1989
  2063  0687  01A1               	clrf	___awmod@counter
  2064  0688  0AA1               	incf	___awmod@counter,f
  2065  0689                     l1979:	
  2066  0689  1BF5               	btfsc	___awmod@divisor+1,7
  2067  068A  2E97               	goto	l1981
  2068  068B  3001               	movlw	1
  2069  068C                     u1175:	
  2070  068C  1003               	clrc
  2071  068D  0DF4               	rlf	___awmod@divisor,f
  2072  068E  0DF5               	rlf	___awmod@divisor+1,f
  2073  068F  3EFF               	addlw	-1
  2074  0690  1D03               	skipz
  2075  0691  2E8C               	goto	u1175
  2076  0692  3001               	movlw	1
  2077  0693  00A0               	movwf	??___awmod
  2078  0694  0820               	movf	??___awmod,w
  2079  0695  07A1               	addwf	___awmod@counter,f
  2080  0696  2E89               	goto	l1979
  2081  0697                     l1981:	
  2082  0697  0875               	movf	___awmod@divisor+1,w
  2083  0698  0277               	subwf	___awmod@dividend+1,w
  2084  0699  1D03               	skipz
  2085  069A  2E9D               	goto	u1195
  2086  069B  0874               	movf	___awmod@divisor,w
  2087  069C  0276               	subwf	___awmod@dividend,w
  2088  069D                     u1195:	
  2089  069D  1C03               	skipc
  2090  069E  2EA5               	goto	l1985
  2091  069F  0874               	movf	___awmod@divisor,w
  2092  06A0  02F6               	subwf	___awmod@dividend,f
  2093  06A1  0875               	movf	___awmod@divisor+1,w
  2094  06A2  1C03               	skipc
  2095  06A3  03F7               	decf	___awmod@dividend+1,f
  2096  06A4  02F7               	subwf	___awmod@dividend+1,f
  2097  06A5                     l1985:	
  2098  06A5  3001               	movlw	1
  2099  06A6                     u1205:	
  2100  06A6  1003               	clrc
  2101  06A7  0CF5               	rrf	___awmod@divisor+1,f
  2102  06A8  0CF4               	rrf	___awmod@divisor,f
  2103  06A9  3EFF               	addlw	-1
  2104  06AA  1D03               	skipz
  2105  06AB  2EA6               	goto	u1205
  2106  06AC  3001               	movlw	1
  2107  06AD  02A1               	subwf	___awmod@counter,f
  2108  06AE  1D03               	btfss	3,2
  2109  06AF  2E97               	goto	l1981
  2110  06B0                     l1989:	
  2111  06B0  0822               	movf	___awmod@sign,w
  2112  06B1  1903               	btfsc	3,2
  2113  06B2  2EB8               	goto	l1993
  2114  06B3  09F6               	comf	___awmod@dividend,f
  2115  06B4  09F7               	comf	___awmod@dividend+1,f
  2116  06B5  0AF6               	incf	___awmod@dividend,f
  2117  06B6  1903               	skipnz
  2118  06B7  0AF7               	incf	___awmod@dividend+1,f
  2119  06B8                     l1993:	
  2120  06B8  0877               	movf	___awmod@dividend+1,w
  2121  06B9  00F5               	movwf	?___awmod+1
  2122  06BA  0876               	movf	___awmod@dividend,w
  2123  06BB  00F4               	movwf	?___awmod
  2124  06BC  0008               	return
  2125  06BD                     __end_of___awmod:	
  2126                           
  2127                           	psect	text4
  2128  056D                     __ptext4:	
  2129 ;; *************** function ___awdiv *****************
  2130 ;; Defined at:
  2131 ;;		line 6 in file "K:\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  divisor         2    4[COMMON] int 
  2134 ;;  dividend        2    6[COMMON] int 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  quotient        2    3[BANK0 ] int 
  2137 ;;  sign            1    2[BANK0 ] unsigned char 
  2138 ;;  counter         1    1[BANK0 ] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    4[COMMON] int 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         4       0       0       0       0
  2149 ;;      Locals:         0       4       0       0       0
  2150 ;;      Temps:          0       1       0       0       0
  2151 ;;      Totals:         4       5       0       0       0
  2152 ;;Total ram usage:        9 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;;		_LCDWriteInt
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function ___awdiv
  2165  056D                     ___awdiv:	
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2169  056D  1283               	bcf	3,5	;RP0=0, select bank0
  2170  056E  1303               	bcf	3,6	;RP1=0, select bank0
  2171  056F  01A2               	clrf	___awdiv@sign
  2172  0570  1FF5               	btfss	___awdiv@divisor+1,7
  2173  0571  2D79               	goto	l1923
  2174  0572  09F4               	comf	___awdiv@divisor,f
  2175  0573  09F5               	comf	___awdiv@divisor+1,f
  2176  0574  0AF4               	incf	___awdiv@divisor,f
  2177  0575  1903               	skipnz
  2178  0576  0AF5               	incf	___awdiv@divisor+1,f
  2179  0577  01A2               	clrf	___awdiv@sign
  2180  0578  0AA2               	incf	___awdiv@sign,f
  2181  0579                     l1923:	
  2182  0579  1FF7               	btfss	___awdiv@dividend+1,7
  2183  057A  2D84               	goto	l1929
  2184  057B  09F6               	comf	___awdiv@dividend,f
  2185  057C  09F7               	comf	___awdiv@dividend+1,f
  2186  057D  0AF6               	incf	___awdiv@dividend,f
  2187  057E  1903               	skipnz
  2188  057F  0AF7               	incf	___awdiv@dividend+1,f
  2189  0580  3001               	movlw	1
  2190  0581  00A0               	movwf	??___awdiv
  2191  0582  0820               	movf	??___awdiv,w
  2192  0583  06A2               	xorwf	___awdiv@sign,f
  2193  0584                     l1929:	
  2194  0584  01A3               	clrf	___awdiv@quotient
  2195  0585  01A4               	clrf	___awdiv@quotient+1
  2196  0586  0874               	movf	___awdiv@divisor,w
  2197  0587  0475               	iorwf	___awdiv@divisor+1,w
  2198  0588  1903               	btfsc	3,2
  2199  0589  2DBB               	goto	l1951
  2200  058A  01A1               	clrf	___awdiv@counter
  2201  058B  0AA1               	incf	___awdiv@counter,f
  2202  058C                     l1939:	
  2203  058C  1BF5               	btfsc	___awdiv@divisor+1,7
  2204  058D  2D9A               	goto	l1941
  2205  058E  3001               	movlw	1
  2206  058F                     u1075:	
  2207  058F  1003               	clrc
  2208  0590  0DF4               	rlf	___awdiv@divisor,f
  2209  0591  0DF5               	rlf	___awdiv@divisor+1,f
  2210  0592  3EFF               	addlw	-1
  2211  0593  1D03               	skipz
  2212  0594  2D8F               	goto	u1075
  2213  0595  3001               	movlw	1
  2214  0596  00A0               	movwf	??___awdiv
  2215  0597  0820               	movf	??___awdiv,w
  2216  0598  07A1               	addwf	___awdiv@counter,f
  2217  0599  2D8C               	goto	l1939
  2218  059A                     l1941:	
  2219  059A  3001               	movlw	1
  2220  059B                     u1095:	
  2221  059B  1003               	clrc
  2222  059C  0DA3               	rlf	___awdiv@quotient,f
  2223  059D  0DA4               	rlf	___awdiv@quotient+1,f
  2224  059E  3EFF               	addlw	-1
  2225  059F  1D03               	skipz
  2226  05A0  2D9B               	goto	u1095
  2227  05A1  0875               	movf	___awdiv@divisor+1,w
  2228  05A2  0277               	subwf	___awdiv@dividend+1,w
  2229  05A3  1D03               	skipz
  2230  05A4  2DA7               	goto	u1105
  2231  05A5  0874               	movf	___awdiv@divisor,w
  2232  05A6  0276               	subwf	___awdiv@dividend,w
  2233  05A7                     u1105:	
  2234  05A7  1C03               	skipc
  2235  05A8  2DB0               	goto	l1947
  2236  05A9  0874               	movf	___awdiv@divisor,w
  2237  05AA  02F6               	subwf	___awdiv@dividend,f
  2238  05AB  0875               	movf	___awdiv@divisor+1,w
  2239  05AC  1C03               	skipc
  2240  05AD  03F7               	decf	___awdiv@dividend+1,f
  2241  05AE  02F7               	subwf	___awdiv@dividend+1,f
  2242  05AF  1423               	bsf	___awdiv@quotient,0
  2243  05B0                     l1947:	
  2244  05B0  3001               	movlw	1
  2245  05B1                     u1115:	
  2246  05B1  1003               	clrc
  2247  05B2  0CF5               	rrf	___awdiv@divisor+1,f
  2248  05B3  0CF4               	rrf	___awdiv@divisor,f
  2249  05B4  3EFF               	addlw	-1
  2250  05B5  1D03               	skipz
  2251  05B6  2DB1               	goto	u1115
  2252  05B7  3001               	movlw	1
  2253  05B8  02A1               	subwf	___awdiv@counter,f
  2254  05B9  1D03               	btfss	3,2
  2255  05BA  2D9A               	goto	l1941
  2256  05BB                     l1951:	
  2257  05BB  0822               	movf	___awdiv@sign,w
  2258  05BC  1903               	btfsc	3,2
  2259  05BD  2DC3               	goto	l1955
  2260  05BE  09A3               	comf	___awdiv@quotient,f
  2261  05BF  09A4               	comf	___awdiv@quotient+1,f
  2262  05C0  0AA3               	incf	___awdiv@quotient,f
  2263  05C1  1903               	skipnz
  2264  05C2  0AA4               	incf	___awdiv@quotient+1,f
  2265  05C3                     l1955:	
  2266  05C3  0824               	movf	___awdiv@quotient+1,w
  2267  05C4  00F5               	movwf	?___awdiv+1
  2268  05C5  0823               	movf	___awdiv@quotient,w
  2269  05C6  00F4               	movwf	?___awdiv
  2270  05C7  0008               	return
  2271  05C8                     __end_of___awdiv:	
  2272                           
  2273                           	psect	text5
  2274  050B                     __ptext5:	
  2275 ;; *************** function _LCDInit *****************
  2276 ;; Defined at:
  2277 ;;		line 192 in file "lcd_hd44780_pic16.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  style           1    wreg     unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  style           1   11[BANK0 ] unsigned char 
  2282 ;;  __i             1   12[BANK0 ] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       0       0       0       0
  2293 ;;      Locals:         0       2       0       0       0
  2294 ;;      Temps:          0       2       0       0       0
  2295 ;;      Totals:         0       4       0       0       0
  2296 ;;Total ram usage:        4 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    3
  2299 ;; This function calls:
  2300 ;;		_LCDBusyLoop
  2301 ;;		_LCDByte
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function _LCDInit
  2309  050B                     _LCDInit:	
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2313                           ;LCDInit@style stored from wreg
  2314  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2315  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2316  050D  00AB               	movwf	LCDInit@style
  2317                           
  2318                           ;lcd_hd44780_pic16.c: 208: _delay((unsigned long)((30)*(4000000/4000.0)));
  2319  050E  3027               	movlw	39
  2320  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0511  00AA               	movwf	??_LCDInit+1
  2323  0512  30F4               	movlw	244
  2324  0513  00A9               	movwf	??_LCDInit
  2325  0514                     u1317:	
  2326  0514  0BA9               	decfsz	??_LCDInit,f
  2327  0515  2D14               	goto	u1317
  2328  0516  0BAA               	decfsz	??_LCDInit+1,f
  2329  0517  2D14               	goto	u1317
  2330  0518  0000               	nop
  2331                           
  2332                           ;lcd_hd44780_pic16.c: 211: TRISD&=(~(0x0F<<0));
  2333  0519  30F0               	movlw	240
  2334  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2335  051B  1303               	bcf	3,6	;RP1=0, select bank0
  2336  051C  00A9               	movwf	??_LCDInit
  2337  051D  0829               	movf	??_LCDInit,w
  2338  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2339  051F  1303               	bcf	3,6	;RP1=0, select bank1
  2340  0520  0588               	andwf	8,f	;volatile
  2341                           
  2342                           ;lcd_hd44780_pic16.c: 213: TRISDbits.TRISD6=0;
  2343  0521  1308               	bcf	8,6	;volatile
  2344                           
  2345                           ;lcd_hd44780_pic16.c: 214: TRISDbits.TRISD4=0;
  2346  0522  1208               	bcf	8,4	;volatile
  2347                           
  2348                           ;lcd_hd44780_pic16.c: 215: TRISDbits.TRISD5=0;
  2349  0523  1288               	bcf	8,5	;volatile
  2350                           
  2351                           ;lcd_hd44780_pic16.c: 217: PORTD&=(~(0x0F<<0));
  2352  0524  30F0               	movlw	240
  2353  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0527  00A9               	movwf	??_LCDInit
  2356  0528  0829               	movf	??_LCDInit,w
  2357  0529  0588               	andwf	8,f	;volatile
  2358                           
  2359                           ;lcd_hd44780_pic16.c: 219: (RD6=0);
  2360  052A  1308               	bcf	8,6	;volatile
  2361                           
  2362                           ;lcd_hd44780_pic16.c: 220: (RD5=0);
  2363  052B  1288               	bcf	8,5	;volatile
  2364                           
  2365                           ;lcd_hd44780_pic16.c: 221: (RD4=0);
  2366  052C  1208               	bcf	8,4	;volatile
  2367                           
  2368                           ;lcd_hd44780_pic16.c: 226: (RD6=1);
  2369                           
  2370                           ;lcd_hd44780_pic16.c: 224: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2371  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2372  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2373  052F  1708               	bsf	8,6	;volatile
  2374                           
  2375                           ;lcd_hd44780_pic16.c: 227: PORTD|=((0b00000010)<<0);
  2376  0530  1488               	bsf	8,1	;volatile
  2377                           
  2378                           ;lcd_hd44780_pic16.c: 228: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2379  0531  0000               	nop
  2380                           
  2381                           ;lcd_hd44780_pic16.c: 229: (RD6=0);
  2382  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0534  1308               	bcf	8,6	;volatile
  2385                           
  2386                           ;lcd_hd44780_pic16.c: 230: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2387  0535  0000               	nop
  2388                           
  2389                           ;lcd_hd44780_pic16.c: 233: LCDBusyLoop();
  2390  0536  120A  118A  2621  120A  118A  	fcall	_LCDBusyLoop
  2391                           
  2392                           ;lcd_hd44780_pic16.c: 238: (LCDByte(0b00101000,0));
  2393  053B  01F6               	clrf	LCDByte@isdata
  2394  053C  3028               	movlw	40
  2395  053D  120A  118A  2786  120A  118A  	fcall	_LCDByte
  2396                           
  2397                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00001100|style,0));
  2398  0542  01F6               	clrf	LCDByte@isdata
  2399  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0545  082B               	movf	LCDInit@style,w
  2402  0546  380C               	iorlw	12
  2403  0547  120A  118A  2786  120A  118A  	fcall	_LCDByte
  2404                           
  2405                           ;lcd_hd44780_pic16.c: 242: (LCDByte(0b01000000,0));
  2406  054C  01F6               	clrf	LCDByte@isdata
  2407  054D  3040               	movlw	64
  2408  054E  120A  118A  2786  120A  118A  	fcall	_LCDByte
  2409                           
  2410                           ;lcd_hd44780_pic16.c: 244: uint8_t __i;
  2411                           ;lcd_hd44780_pic16.c: 245: for(__i=0;__i<sizeof(__cgram);__i++)
  2412  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0555  01AC               	clrf	LCDInit@__i
  2415  0556                     L2:	
  2416  0556  3040               	movlw	64
  2417  0557  022C               	subwf	LCDInit@__i,w
  2418  0558  1803               	btfsc	3,0
  2419  0559  0008               	return
  2420                           
  2421                           ;lcd_hd44780_pic16.c: 246: (LCDByte(__cgram[__i],1));
  2422  055A  01F6               	clrf	LCDByte@isdata
  2423  055B  0AF6               	incf	LCDByte@isdata,f
  2424  055C  082C               	movf	LCDInit@__i,w
  2425  055D  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  2426  055E  0084               	movwf	4
  2427  055F  1383               	bcf	3,7	;select IRP bank1
  2428  0560  0800               	movf	0,w
  2429  0561  120A  118A  2786  120A  118A  	fcall	_LCDByte
  2430  0566  3001               	movlw	1
  2431  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0569  00A9               	movwf	??_LCDInit
  2434  056A  0829               	movf	??_LCDInit,w
  2435  056B  07AC               	addwf	LCDInit@__i,f
  2436  056C  2D56               	goto	L2
  2437  056D                     __end_of_LCDInit:	
  2438                           
  2439                           	psect	text6
  2440  07C4                     __ptext6:	
  2441 ;; *************** function _LCDGotoXY *****************
  2442 ;; Defined at:
  2443 ;;		line 351 in file "lcd_hd44780_pic16.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  x               1    wreg     unsigned char 
  2446 ;;  y               1    9[BANK0 ] unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  x               1   10[BANK0 ] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       1       0       0       0
  2459 ;;      Locals:         0       1       0       0       0
  2460 ;;      Temps:          1       0       0       0       0
  2461 ;;      Totals:         1       2       0       0       0
  2462 ;;Total ram usage:        3 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    3
  2465 ;; This function calls:
  2466 ;;		_LCDByte
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _LCDGotoXY
  2474  07C4                     _LCDGotoXY:	
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2478                           ;LCDGotoXY@x stored from wreg
  2479  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  2480  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  2481  07C6  00AA               	movwf	LCDGotoXY@x
  2482                           
  2483                           ;lcd_hd44780_pic16.c: 353: if(x>=16) return;
  2484  07C7  3010               	movlw	16
  2485  07C8  022A               	subwf	LCDGotoXY@x,w
  2486  07C9  1803               	btfsc	3,0
  2487  07CA  0008               	return
  2488  07CB  2FD5               	goto	l1881
  2489  07CC                     l67:	
  2490                           ;lcd_hd44780_pic16.c: 379: case 1:
  2491                           
  2492                           ;lcd_hd44780_pic16.c: 378: break;
  2493                           
  2494                           ;lcd_hd44780_pic16.c: 376: {
  2495                           ;lcd_hd44780_pic16.c: 377: case 0:
  2496                           
  2497                           ;lcd_hd44780_pic16.c: 375: switch(y)
  2498                           
  2499                           
  2500                           ;lcd_hd44780_pic16.c: 380: x|=0b01000000;
  2501  07CC  172A               	bsf	LCDGotoXY@x,6
  2502                           
  2503                           ;lcd_hd44780_pic16.c: 381: break;
  2504  07CD  2FE3               	goto	l66
  2505  07CE                     l1875:	
  2506                           ;lcd_hd44780_pic16.c: 382: case 2:
  2507                           
  2508                           
  2509                           ;lcd_hd44780_pic16.c: 383: x+=0x10;
  2510  07CE  3010               	movlw	16
  2511  07CF  2FD1               	goto	L3
  2512  07D0                     l1877:	
  2513                           ;lcd_hd44780_pic16.c: 385: case 3:
  2514                           
  2515                           ;lcd_hd44780_pic16.c: 384: break;
  2516                           
  2517                           
  2518                           ;lcd_hd44780_pic16.c: 386: x+=0x50;
  2519  07D0  3050               	movlw	80
  2520  07D1                     L3:	
  2521  07D1  00F7               	movwf	??_LCDGotoXY
  2522  07D2  0877               	movf	??_LCDGotoXY,w
  2523  07D3  07AA               	addwf	LCDGotoXY@x,f
  2524                           
  2525                           ;lcd_hd44780_pic16.c: 388: }
  2526                           
  2527                           ;lcd_hd44780_pic16.c: 387: break;
  2528  07D4  2FE3               	goto	l66
  2529  07D5                     l1881:	
  2530  07D5  0829               	movf	LCDGotoXY@y,w
  2531                           
  2532                           ; Switch size 1, requested type "space"
  2533                           ; Number of cases is 4, Range of values is 0 to 3
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte           13     7 (average)
  2537                           ; direct_byte           20     8 (fixed)
  2538                           ; jumptable            260     6 (fixed)
  2539                           ;	Chosen strategy is simple_byte
  2540  07D6  3A00               	xorlw	0	; case 0
  2541  07D7  1903               	skipnz
  2542  07D8  2FE3               	goto	l66
  2543  07D9  3A01               	xorlw	1	; case 1
  2544  07DA  1903               	skipnz
  2545  07DB  2FCC               	goto	l67
  2546  07DC  3A03               	xorlw	3	; case 2
  2547  07DD  1903               	skipnz
  2548  07DE  2FCE               	goto	l1875
  2549  07DF  3A01               	xorlw	1	; case 3
  2550  07E0  1903               	skipnz
  2551  07E1  2FD0               	goto	l1877
  2552  07E2  2FE3               	goto	l66
  2553  07E3                     l66:	
  2554                           
  2555                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  2556  07E3  17AA               	bsf	LCDGotoXY@x,7
  2557                           
  2558                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  2559  07E4  01F6               	clrf	LCDByte@isdata
  2560  07E5  082A               	movf	LCDGotoXY@x,w
  2561  07E6  120A  118A  2786   	fcall	_LCDByte
  2562  07E9  0008               	return
  2563  07EA                     __end_of_LCDGotoXY:	
  2564                           
  2565                           	psect	text7
  2566  0786                     __ptext7:	
  2567 ;; *************** function _LCDByte *****************
  2568 ;; Defined at:
  2569 ;;		line 79 in file "lcd_hd44780_pic16.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  c               1    wreg     unsigned char 
  2572 ;;  isdata          1    6[COMMON] unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  c               1    7[BANK0 ] unsigned char 
  2575 ;;  temp            1    8[BANK0 ] unsigned char 
  2576 ;;  ln              1    6[BANK0 ] unsigned char 
  2577 ;;  hn              1    5[BANK0 ] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, pclath, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         1       0       0       0       0
  2588 ;;      Locals:         0       4       0       0       0
  2589 ;;      Temps:          0       2       0       0       0
  2590 ;;      Totals:         1       6       0       0       0
  2591 ;;Total ram usage:        7 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    2
  2594 ;; This function calls:
  2595 ;;		_LCDBusyLoop
  2596 ;; This function is called by:
  2597 ;;		_LCDInit
  2598 ;;		_LCDWriteString
  2599 ;;		_LCDGotoXY
  2600 ;;		_main
  2601 ;;		_LCDWriteInt
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _LCDByte
  2607  0786                     _LCDByte:	
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2611                           ;LCDByte@c stored from wreg
  2612  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0788  00A7               	movwf	LCDByte@c
  2615                           
  2616                           ;lcd_hd44780_pic16.c: 88: uint8_t hn,ln;
  2617                           ;lcd_hd44780_pic16.c: 89: uint8_t temp;
  2618                           ;lcd_hd44780_pic16.c: 91: hn=c>>4;
  2619  0789  0827               	movf	LCDByte@c,w
  2620  078A  00A3               	movwf	??_LCDByte
  2621  078B  3004               	movlw	4
  2622  078C                     u955:	
  2623  078C  1003               	clrc
  2624  078D  0CA3               	rrf	??_LCDByte,f
  2625  078E  3EFF               	addlw	-1
  2626  078F  1D03               	skipz
  2627  0790  2F8C               	goto	u955
  2628  0791  0823               	movf	??_LCDByte,w
  2629  0792  00A4               	movwf	??_LCDByte+1
  2630  0793  0824               	movf	??_LCDByte+1,w
  2631  0794  00A5               	movwf	LCDByte@hn
  2632                           
  2633                           ;lcd_hd44780_pic16.c: 92: ln=(c & 0x0F);
  2634  0795  0827               	movf	LCDByte@c,w
  2635  0796  390F               	andlw	15
  2636  0797  00A3               	movwf	??_LCDByte
  2637  0798  0823               	movf	??_LCDByte,w
  2638  0799  00A6               	movwf	LCDByte@ln
  2639                           
  2640                           ;lcd_hd44780_pic16.c: 94: if(isdata==0)
  2641  079A  0876               	movf	LCDByte@isdata,w
  2642  079B  1D03               	btfss	3,2
  2643  079C  2F9F               	goto	l21
  2644                           
  2645                           ;lcd_hd44780_pic16.c: 95: (RD4=0);
  2646  079D  1208               	bcf	8,4	;volatile
  2647  079E  2FA0               	goto	l22
  2648  079F                     l21:	
  2649                           
  2650                           ;lcd_hd44780_pic16.c: 96: else
  2651                           ;lcd_hd44780_pic16.c: 97: (RD4=1);
  2652  079F  1608               	bsf	8,4	;volatile
  2653  07A0                     l22:	
  2654                           
  2655                           ;lcd_hd44780_pic16.c: 99: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2656                           ;lcd_hd44780_pic16.c: 101: (RD6=1);
  2657  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  2658  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  2659  07A2  1708               	bsf	8,6	;volatile
  2660                           
  2661                           ;lcd_hd44780_pic16.c: 105: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  2662  07A3  0808               	movf	8,w	;volatile
  2663  07A4  39F0               	andlw	240
  2664  07A5  0425               	iorwf	LCDByte@hn,w
  2665  07A6  00A3               	movwf	??_LCDByte
  2666  07A7  0823               	movf	??_LCDByte,w
  2667  07A8  00A8               	movwf	LCDByte@temp
  2668                           
  2669                           ;lcd_hd44780_pic16.c: 106: PORTD=temp;
  2670  07A9  0828               	movf	LCDByte@temp,w
  2671  07AA  0088               	movwf	8	;volatile
  2672                           
  2673                           ;lcd_hd44780_pic16.c: 108: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2674  07AB  0000               	nop
  2675                           
  2676                           ;lcd_hd44780_pic16.c: 112: (RD6=0);
  2677  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2678  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2679  07AE  1308               	bcf	8,6	;volatile
  2680                           
  2681                           ;lcd_hd44780_pic16.c: 114: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2682  07AF  0000               	nop
  2683                           
  2684                           ;lcd_hd44780_pic16.c: 117: (RD6=1);
  2685  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  2686  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  2687  07B2  1708               	bsf	8,6	;volatile
  2688                           
  2689                           ;lcd_hd44780_pic16.c: 119: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  2690  07B3  0808               	movf	8,w	;volatile
  2691  07B4  39F0               	andlw	240
  2692  07B5  0426               	iorwf	LCDByte@ln,w
  2693  07B6  00A3               	movwf	??_LCDByte
  2694  07B7  0823               	movf	??_LCDByte,w
  2695  07B8  00A8               	movwf	LCDByte@temp
  2696                           
  2697                           ;lcd_hd44780_pic16.c: 121: PORTD=temp;
  2698  07B9  0828               	movf	LCDByte@temp,w
  2699  07BA  0088               	movwf	8	;volatile
  2700                           
  2701                           ;lcd_hd44780_pic16.c: 123: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2702  07BB  0000               	nop
  2703                           
  2704                           ;lcd_hd44780_pic16.c: 127: (RD6=0);
  2705  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2706  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2707  07BE  1308               	bcf	8,6	;volatile
  2708                           
  2709                           ;lcd_hd44780_pic16.c: 129: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2710  07BF  0000               	nop
  2711                           
  2712                           ;lcd_hd44780_pic16.c: 131: LCDBusyLoop();
  2713  07C0  120A  118A  2621   	fcall	_LCDBusyLoop
  2714  07C3  0008               	return
  2715  07C4                     __end_of_LCDByte:	
  2716                           
  2717                           	psect	text8
  2718  0621                     __ptext8:	
  2719 ;; *************** function _LCDBusyLoop *****************
  2720 ;; Defined at:
  2721 ;;		line 134 in file "lcd_hd44780_pic16.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  status          1    2[BANK0 ] unsigned char 
  2726 ;;  temp            1    1[BANK0 ] unsigned char 
  2727 ;;  busy            1    0[BANK0 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         0       0       0       0       0
  2738 ;;      Locals:         0       3       0       0       0
  2739 ;;      Temps:          2       0       0       0       0
  2740 ;;      Totals:         2       3       0       0       0
  2741 ;;Total ram usage:        5 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_LCDByte
  2748 ;;		_LCDInit
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _LCDBusyLoop
  2754  0621                     _LCDBusyLoop:	
  2755                           
  2756                           ;lcd_hd44780_pic16.c: 138: uint8_t busy,status=0x00,temp;
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2760  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0623  01A2               	clrf	LCDBusyLoop@status
  2763                           
  2764                           ;lcd_hd44780_pic16.c: 141: TRISD|=(0x0f<<0);
  2765  0624  300F               	movlw	15
  2766  0625  00F4               	movwf	??_LCDBusyLoop
  2767  0626  0874               	movf	??_LCDBusyLoop,w
  2768  0627  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0628  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0629  0488               	iorwf	8,f	;volatile
  2771                           
  2772                           ;lcd_hd44780_pic16.c: 144: (RD5=1);
  2773  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2774  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2775  062C  1688               	bsf	8,5	;volatile
  2776                           
  2777                           ;lcd_hd44780_pic16.c: 145: (RD4=0);
  2778  062D  1208               	bcf	8,4	;volatile
  2779  062E                     l1731:	
  2780                           ;lcd_hd44780_pic16.c: 152: do
  2781                           
  2782                           ;lcd_hd44780_pic16.c: 149: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2783                           
  2784                           
  2785                           ;lcd_hd44780_pic16.c: 153: {
  2786                           ;lcd_hd44780_pic16.c: 155: (RD6=1);
  2787  062E  1283               	bcf	3,5	;RP0=0, select bank0
  2788  062F  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0630  1708               	bsf	8,6	;volatile
  2790                           
  2791                           ;lcd_hd44780_pic16.c: 160: status=(PORTD>>0);
  2792                           
  2793                           ;lcd_hd44780_pic16.c: 158: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2794  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0632  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0633  0808               	movf	8,w	;volatile
  2797  0634  00F4               	movwf	??_LCDBusyLoop
  2798  0635  0874               	movf	??_LCDBusyLoop,w
  2799  0636  00A2               	movwf	LCDBusyLoop@status
  2800                           
  2801                           ;lcd_hd44780_pic16.c: 161: status=status<<4;
  2802  0637  0822               	movf	LCDBusyLoop@status,w
  2803  0638  00F4               	movwf	??_LCDBusyLoop
  2804  0639  3003               	movlw	3
  2805  063A                     u935:	
  2806  063A  1003               	clrc
  2807  063B  0DF4               	rlf	??_LCDBusyLoop,f
  2808  063C  3EFF               	addlw	-1
  2809  063D  1D03               	skipz
  2810  063E  2E3A               	goto	u935
  2811  063F  1003               	clrc
  2812  0640  0D74               	rlf	??_LCDBusyLoop,w
  2813  0641  00F5               	movwf	??_LCDBusyLoop+1
  2814  0642  0875               	movf	??_LCDBusyLoop+1,w
  2815  0643  00A2               	movwf	LCDBusyLoop@status
  2816                           
  2817                           ;lcd_hd44780_pic16.c: 166: (RD6=0);
  2818                           
  2819                           ;lcd_hd44780_pic16.c: 163: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2820  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0646  1308               	bcf	8,6	;volatile
  2823                           
  2824                           ;lcd_hd44780_pic16.c: 167: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2825  0647  0000               	nop
  2826                           
  2827                           ;lcd_hd44780_pic16.c: 169: (RD6=1);
  2828  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0649  1303               	bcf	3,6	;RP1=0, select bank0
  2830  064A  1708               	bsf	8,6	;volatile
  2831                           
  2832                           ;lcd_hd44780_pic16.c: 172: temp=(PORTD>>0);
  2833                           
  2834                           ;lcd_hd44780_pic16.c: 170: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2835  064B  1283               	bcf	3,5	;RP0=0, select bank0
  2836  064C  1303               	bcf	3,6	;RP1=0, select bank0
  2837  064D  0808               	movf	8,w	;volatile
  2838  064E  00F4               	movwf	??_LCDBusyLoop
  2839  064F  0874               	movf	??_LCDBusyLoop,w
  2840  0650  00A1               	movwf	LCDBusyLoop@temp
  2841                           
  2842                           ;lcd_hd44780_pic16.c: 173: temp&=0x0F;
  2843  0651  300F               	movlw	15
  2844  0652  00F4               	movwf	??_LCDBusyLoop
  2845  0653  0874               	movf	??_LCDBusyLoop,w
  2846  0654  05A1               	andwf	LCDBusyLoop@temp,f
  2847                           
  2848                           ;lcd_hd44780_pic16.c: 175: status=status|temp;
  2849  0655  0822               	movf	LCDBusyLoop@status,w
  2850  0656  0421               	iorwf	LCDBusyLoop@temp,w
  2851  0657  00F4               	movwf	??_LCDBusyLoop
  2852  0658  0874               	movf	??_LCDBusyLoop,w
  2853  0659  00A2               	movwf	LCDBusyLoop@status
  2854                           
  2855                           ;lcd_hd44780_pic16.c: 177: busy=status & 0b10000000;
  2856  065A  0822               	movf	LCDBusyLoop@status,w
  2857  065B  3980               	andlw	128
  2858  065C  00F4               	movwf	??_LCDBusyLoop
  2859  065D  0874               	movf	??_LCDBusyLoop,w
  2860  065E  00A0               	movwf	LCDBusyLoop@busy
  2861                           
  2862                           ;lcd_hd44780_pic16.c: 181: (RD6=0);
  2863                           
  2864                           ;lcd_hd44780_pic16.c: 179: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2865  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0661  1308               	bcf	8,6	;volatile
  2868                           
  2869                           ;lcd_hd44780_pic16.c: 182: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2870  0662  0000               	nop
  2871                           
  2872                           ;lcd_hd44780_pic16.c: 183: }while(busy);
  2873  0663  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0664  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0665  0820               	movf	LCDBusyLoop@busy,w
  2876  0666  1D03               	btfss	3,2
  2877  0667  2E2E               	goto	l1731
  2878                           
  2879                           ;lcd_hd44780_pic16.c: 185: (RD5=0);
  2880  0668  1288               	bcf	8,5	;volatile
  2881                           
  2882                           ;lcd_hd44780_pic16.c: 188: TRISD&=(~(0x0F<<0));
  2883  0669  30F0               	movlw	240
  2884  066A  00F4               	movwf	??_LCDBusyLoop
  2885  066B  0874               	movf	??_LCDBusyLoop,w
  2886  066C  1683               	bsf	3,5	;RP0=1, select bank1
  2887  066D  1303               	bcf	3,6	;RP1=0, select bank1
  2888  066E  0588               	andwf	8,f	;volatile
  2889  066F  0008               	return
  2890  0670                     __end_of_LCDBusyLoop:	
  2891                           
  2892                           	psect	text9
  2893  04A2                     __ptext9:	
  2894 ;; *************** function _isr *****************
  2895 ;; Defined at:
  2896 ;;		line 82 in file "main.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, btemp+1
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0
  2912 ;;      Temps:          4       0       0       0       0
  2913 ;;      Totals:         4       0       0       0       0
  2914 ;;Total ram usage:        4 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		Interrupt level 1
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _isr
  2925  04A2                     _isr:	
  2926                           
  2927                           ;main.c: 84: if(TMR1IF==1)
  2928  04A2  1C0C               	btfss	12,0	;volatile
  2929  04A3  2CE8               	goto	i1l1519
  2930                           
  2931                           ;main.c: 85: {
  2932                           ;main.c: 86: TMR1=34286;
  2933  04A4  3085               	movlw	133
  2934  04A5  008F               	movwf	15	;volatile
  2935  04A6  30EE               	movlw	238
  2936  04A7  008E               	movwf	14	;volatile
  2937                           
  2938                           ;main.c: 87: TMR1IF=0;
  2939  04A8  100C               	bcf	12,0	;volatile
  2940                           
  2941                           ;main.c: 89: second++;
  2942  04A9  3001               	movlw	1
  2943  04AA  07CA               	addwf	_second,f
  2944  04AB  1803               	skipnc
  2945  04AC  0ACB               	incf	_second+1,f
  2946  04AD  3000               	movlw	0
  2947  04AE  07CB               	addwf	_second+1,f
  2948                           
  2949                           ;main.c: 90: if(second>59)
  2950  04AF  084B               	movf	_second+1,w
  2951  04B0  3A80               	xorlw	128
  2952  04B1  00FF               	movwf	127
  2953  04B2  3080               	movlw	128
  2954  04B3  027F               	subwf	127,w
  2955  04B4  1D03               	skipz
  2956  04B5  2CB8               	goto	u84_25
  2957  04B6  303C               	movlw	60
  2958  04B7  024A               	subwf	_second,w
  2959  04B8                     u84_25:	
  2960  04B8  1C03               	skipc
  2961  04B9  2CE8               	goto	i1l1519
  2962                           
  2963                           ;main.c: 91: {
  2964                           ;main.c: 92: second=0;
  2965  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2966  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2967  04BC  01CA               	clrf	_second
  2968  04BD  01CB               	clrf	_second+1
  2969                           
  2970                           ;main.c: 93: minute++;
  2971  04BE  3001               	movlw	1
  2972  04BF  07C8               	addwf	_minute,f
  2973  04C0  1803               	skipnc
  2974  04C1  0AC9               	incf	_minute+1,f
  2975  04C2  3000               	movlw	0
  2976  04C3  07C9               	addwf	_minute+1,f
  2977                           
  2978                           ;main.c: 94: if(minute>59)
  2979  04C4  0849               	movf	_minute+1,w
  2980  04C5  3A80               	xorlw	128
  2981  04C6  00FF               	movwf	127
  2982  04C7  3080               	movlw	128
  2983  04C8  027F               	subwf	127,w
  2984  04C9  1D03               	skipz
  2985  04CA  2CCD               	goto	u85_25
  2986  04CB  303C               	movlw	60
  2987  04CC  0248               	subwf	_minute,w
  2988  04CD                     u85_25:	
  2989  04CD  1C03               	skipc
  2990  04CE  2CE8               	goto	i1l1519
  2991                           
  2992                           ;main.c: 95: {
  2993                           ;main.c: 96: minute=0;
  2994  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2995  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2996  04D1  01C8               	clrf	_minute
  2997  04D2  01C9               	clrf	_minute+1
  2998                           
  2999                           ;main.c: 97: hours++;
  3000  04D3  3001               	movlw	1
  3001  04D4  07C6               	addwf	_hours,f
  3002  04D5  1803               	skipnc
  3003  04D6  0AC7               	incf	_hours+1,f
  3004  04D7  3000               	movlw	0
  3005  04D8  07C7               	addwf	_hours+1,f
  3006                           
  3007                           ;main.c: 98: if(hours>23)
  3008  04D9  0847               	movf	_hours+1,w
  3009  04DA  3A80               	xorlw	128
  3010  04DB  00FF               	movwf	127
  3011  04DC  3080               	movlw	128
  3012  04DD  027F               	subwf	127,w
  3013  04DE  1D03               	skipz
  3014  04DF  2CE2               	goto	u86_25
  3015  04E0  3018               	movlw	24
  3016  04E1  0246               	subwf	_hours,w
  3017  04E2                     u86_25:	
  3018  04E2  1C03               	skipc
  3019  04E3  2CE8               	goto	i1l1519
  3020                           
  3021                           ;main.c: 99: {
  3022                           ;main.c: 100: hours=0;
  3023  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3024  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3025  04E6  01C6               	clrf	_hours
  3026  04E7  01C7               	clrf	_hours+1
  3027  04E8                     i1l1519:	
  3028                           
  3029                           ;main.c: 101: }
  3030                           ;main.c: 102: }
  3031                           ;main.c: 103: }
  3032                           ;main.c: 104: }
  3033                           ;main.c: 106: if(T0IF==1)
  3034  04E8  1D0B               	btfss	11,2	;volatile
  3035  04E9  2CF4               	goto	i1l1529
  3036                           
  3037                           ;main.c: 107: {
  3038                           ;main.c: 108: TMR0=0;
  3039  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3040  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3041  04EC  0181               	clrf	1	;volatile
  3042                           
  3043                           ;main.c: 109: T0IF=0;
  3044  04ED  110B               	bcf	11,2	;volatile
  3045                           
  3046                           ;main.c: 111: if(PORTBbits.RB0==0)
  3047  04EE  1806               	btfsc	6,0	;volatile
  3048  04EF  2CF4               	goto	i1l1529
  3049                           
  3050                           ;main.c: 112: {
  3051                           ;main.c: 113: FB=1;
  3052  04F0  3001               	movlw	1
  3053  04F1  00BE               	movwf	_FB
  3054  04F2  3000               	movlw	0
  3055  04F3  00BF               	movwf	_FB+1
  3056  04F4                     i1l1529:	
  3057                           
  3058                           ;main.c: 114: }
  3059                           ;main.c: 116: }
  3060                           ;main.c: 118: if(TMR2IF==1)
  3061  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3062  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3063  04F6  1C8C               	btfss	12,1	;volatile
  3064  04F7  2D00               	goto	i1l167
  3065                           
  3066                           ;main.c: 119: {
  3067                           ;main.c: 120: TMR2=0;
  3068  04F8  0191               	clrf	17	;volatile
  3069                           
  3070                           ;main.c: 121: TMR2IF=0;
  3071  04F9  108C               	bcf	12,1	;volatile
  3072                           
  3073                           ;main.c: 123: if(PORTBbits.RB3==0)
  3074  04FA  1986               	btfsc	6,3	;volatile
  3075  04FB  2D00               	goto	i1l167
  3076                           
  3077                           ;main.c: 124: {
  3078                           ;main.c: 125: SB=1;
  3079  04FC  3001               	movlw	1
  3080  04FD  00BC               	movwf	_SB
  3081  04FE  3000               	movlw	0
  3082  04FF  00BD               	movwf	_SB+1
  3083  0500                     i1l167:	
  3084  0500  0873               	movf	??_isr+3,w
  3085  0501  00FF               	movwf	127
  3086  0502  0872               	movf	??_isr+2,w
  3087  0503  008A               	movwf	10
  3088  0504  0871               	movf	??_isr+1,w
  3089  0505  0084               	movwf	4
  3090  0506  0E70               	swapf	??_isr^(0+-128),w
  3091  0507  0083               	movwf	3
  3092  0508  0EFE               	swapf	126,f
  3093  0509  0E7E               	swapf	126,w
  3094  050A  0009               	retfie
  3095  050B                     __end_of_isr:	
  3096  007E                     btemp	set	126	;btemp
  3097  007E                     wtemp0	set	126
  3098                           
  3099                           	psect	intentry
  3100  0004                     __pintentry:	
  3101                           ;incstack = 0
  3102                           ; Regs used in _isr: [wreg+status,2+btemp+1]
  3103                           
  3104  0004                     interrupt_function:	
  3105  007E                     saved_w	set	btemp
  3106  0004  00FE               	movwf	btemp
  3107  0005  0E03               	swapf	3,w
  3108  0006  00F0               	movwf	??_isr
  3109  0007  0804               	movf	4,w
  3110  0008  00F1               	movwf	??_isr+1
  3111  0009  080A               	movf	10,w
  3112  000A  00F2               	movwf	??_isr+2
  3113  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3114  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3115  000D  087F               	movf	btemp+1,w
  3116  000E  00F3               	movwf	??_isr+3
  3117  000F  120A  118A  2CA2   	ljmp	_isr


Data Sizes:
    Strings     54
    Constant    0
    Data        64
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     23      44
    BANK1            80      0      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[9]), STR_13(CODE[8]), 
		 -> STR_12(CODE[8]), STR_11(CODE[7]), main@smile(BANK0[8]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDWriteString
    _main->___awdiv
    _main->___awmod
    _clockTime->_LCDWriteString
    _clockTime->___awdiv
    _clockTime->___awmod
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_clockTime
    _clockTime->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   16452
                                             14 BANK0      9     9      0
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                            ___awdiv
                            ___awmod
                          _clockTime
 ---------------------------------------------------------------------------------
 (1) _clockTime                                            2     0      2    4008
                                             12 BANK0      2     0      2
                     _LCDWriteString
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     2      2    2807
                                              7 COMMON     1     1      0
                                              9 BANK0      3     1      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1733
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1745
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1491
                                              9 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    3175
                                              7 COMMON     1     1      0
                                              9 BANK0      2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    1185
                                              6 COMMON     1     0      1
                                              3 BANK0      6     6      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     176
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   ___awdiv
   ___awmod
   _clockTime
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     ___awdiv (ARG)
     ___awmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      76      12        0.0%
ABS                  0      0      76       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 05 22:53:00 2018

           ?_LCDBusyLoop 0070                        pc 0002              __CFG_CP$OFF 0000  
                     l21 079F                       l22 07A0                       _FB 003E  
                     l66 07E3                       l67 07CC                       _SB 003C  
           ___awdiv@sign 0022                       fsr 0004              __CFG_LVP$ON 0000  
                    l154 04A1                      _GIE 005F                      _RD4 0044  
                    _RD5 0045                      _RD6 0046             __CFG_CPD$OFF 0000  
                    u935 063A                      u955 078C                      _isr 04A2  
                    _vrH 0040                      _vrM 0042                      _vrS 0044  
                    fsr0 0004                      indf 0000             ___awmod@sign 0022  
           __CFG_FOSC$HS 0000          __end_of_LCDByte 07C4          __end_of_LCDInit 056D  
            LCDByte@temp 0028                     l2111 00EC                     l2221 0481  
                   l2175 030C                     l1731 062E                     l1811 0600  
                   l1901 045C                     l1815 0608                     l1903 0466  
                   l1905 0470                     l1923 0579                     l1819 05C8  
                   l1941 059A                     l1909 047A                     l1951 05BB  
                   l1881 07D5                     l1929 0584                     l1875 07CE  
                   l1955 05C3                     l1947 05B0                     l1939 058C  
                   l1971 0683                     l1891 042A                     l1877 07D0  
                   l1981 0697                     l1893 0434                     l1967 067C  
                   l1895 043E                     l1887 0416                     l1993 06B8  
                   l1985 06A5                     l1897 0448                     l1889 0420  
                   l1979 0689                     l1899 0452                     l1989 06B0  
                   ?_isr 0070                     STR_1 0730                     STR_2 0732  
                   STR_3 0734                     STR_4 0736                     STR_5 0738  
                   STR_6 073A                     STR_7 073C                     STR_8 073E  
                   STR_9 0740                     _T0IF 005A                     u1105 05A7  
                   u1115 05B1                     u1205 06A6                     u1075 058F  
                   u1317 0514                     u1095 059B                     u1175 068C  
                   u1195 069D                     _PEIE 005E                     _TMR0 0001  
                   _TMR1 000E                     _TMR2 0011             __CFG_WRT$OFF 0000  
                   _main 002F       __size_of_LCDGotoXY 0026                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0012                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 05C8                    STR_10 0742  
                  STR_11 0729                    STR_20 0744                    STR_12 0721  
                  STR_13 0719                    STR_14 0710                    STR_15 0744  
                  STR_16 0744                    STR_17 0744            __CFG_WDTE$OFF 0000  
                  STR_18 0744                    STR_19 0744          __end_of___awmod 06BD  
           LCDInit@style 002B          ___awdiv@divisor 0074                    i1l167 0500  
        ___awdiv@counter 0021                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    u84_25 04B8  
                  u85_25 04CD                    u86_25 04E2                    _count 0078  
                  _hours 0046                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 0415  
                 ??_main 002E        __end_of_LCDGotoXY 07EA            LCDByte@isdata 0076  
              ??_LCDByte 0023                ??_LCDInit 0029         ___awdiv@dividend 0076  
                 i1l1519 04E8                   i1l1529 04F4                   _TMR0IE 005D  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1CS 0081  
                 _TMR2IE 0461                   _TMR2IF 0061                   _TMR1ON 0080  
                 _TMR2ON 0092           __CFG_PWRTE$OFF 0000           _LCDWriteString 05C8  
              ??___awdiv 0020                ??___awmod 0020     __size_of_LCDBusyLoop 004F  
       ___awdiv@quotient 0023                   _minute 0048                   _second 004A  
        ___awmod@divisor 0074          ___awmod@counter 0021                   saved_w 007E  
__end_of__initialization 002B   __end_of_LCDWriteString 0621                LCDByte@hn 0025  
              LCDByte@ln 0026           __pcstackCOMMON 0070             __pidataBANK1 0746  
     __size_of_clockTime 008D               __pbssBANK0 0037          ?_LCDWriteString 0029  
             __pmaintext 002F               __pintentry 0004                  _T1CKPS0 0084  
                _T1CKPS1 0085                  _T2CKPS0 0090                  _T2CKPS1 0091  
                _LCDByte 0786                  _LCDInit 050B               __stringtab 0700  
      __end_of_clockTime 04A2                  ___cgram 00A0                  ___awdiv 056D  
                ___awmod 0670                  __ptext1 0415                  __ptext2 05C8  
                __ptext3 0670                  __ptext4 056D                  __ptext5 050B  
                __ptext6 07C4                  __ptext7 0786                  __ptext8 0621  
                __ptext9 04A2             __size_of_isr 0069         ___awmod@dividend 0076  
              _LCDGotoXY 07C4                  clrloop0 06BE     end_of_initialization 002B  
             clockTime@x 002C                _PORTBbits 0006        LCDWriteString@msg 0029  
              _TRISDbits 0088               ?_LCDGotoXY 0029               LCDInit@__i 002C  
             LCDGotoXY@x 002A               LCDGotoXY@y 0029            ??_LCDBusyLoop 0074  
    start_initialization 0015              __end_of_isr 050B         ??_LCDWriteString 0077  
             init_fetch0 07EA              __pdataBANK1 00A0      __end_of_LCDBusyLoop 0670  
               ?_LCDByte 0076                 ?_LCDInit 0070              __pbssCOMMON 0078  
               LCDByte@c 0027                ___latbits 0002            __pcstackBANK0 0020  
            ??_LCDGotoXY 0077         LCDWriteInt@F1170 0037                 ?___awdiv 0074  
               ?___awmod 0074                _clockTime 0415                __pstrings 0700  
        LCDBusyLoop@busy 0020          LCDBusyLoop@temp 0021        interrupt_function 0004  
              clear_ram0 06BD              _LCDBusyLoop 0621               ?_clockTime 002C  
       LCDWriteString@cc 002B              __stringbase 070F         __size_of_LCDByte 003E  
       __size_of_LCDInit 0062                main@smile 002F         __size_of___awdiv 005B  
       __size_of___awmod 004D        LCDBusyLoop@status 0022       __end_of__stringtab 0710  
          __size_of_main 03E6              ??_clockTime 0078                 init_ram0 07EE  
               intlevel1 0000                stringcode 070A               _OPTION_REG 0081  
               stringdir 070A                 stringtab 0700  __size_of_LCDWriteString 0059  
